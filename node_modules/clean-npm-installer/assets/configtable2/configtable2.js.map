{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/collectionutil.js","src/configtable.js","src/constraintmanager.js","src/diff.js","src/draggable.js","src/entrypool.js","src/entryviewmanager.js","src/jquery-selectors.js","src/sortmethods.js","src/stickyfloat.js","src/template-builder.js"],"names":[],"mappings":"AAAA;;;;;;;;;QCAgB,U,GAAA,U;AAAT,SAAS,UAAT,CAAoB,UAApB,EAAgC,MAAhC,EAAwC;AAC9C,KAAI,QAAQ,IAAI,GAAJ,EAAZ;KACC,YAAY,SAAZ,SAAY,CAAC,CAAD,EAAI,MAAJ;AAAA,SAAe,OAAO,GAAP,CAAW,UAAC,CAAD;AAAA,UAAO,EAAE,GAAF,CAAM,CAAN,CAAP;AAAA,GAAX,EAA4B,IAA5B,CAAiC,GAAjC,CAAf;AAAA,EADb;;AAD8C;AAAA;AAAA;;AAAA;AAK9C,uBAAkB,WAAW,MAA7B,8HAAqC;AAAA,OAA5B,KAA4B;;AACpC,OAAI,MAAM,UAAU,KAAV,EAAiB,MAAjB,CAAV;OACC,OAAO,MAAM,GAAN,CAAU,GAAV,CADR;;AAGA,OAAI,IAAJ,EAAU;AACT,SAAK,IAAL,CAAU,KAAV;AACA,IAFD,MAEO;AACN,UAAM,GAAN,CAAU,GAAV,EAAe,CAAC,KAAD,CAAf;AACA;AACD;AAd6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgB9C,KAAI,aAAa,EAAjB;AAhB8C;AAAA;AAAA;;AAAA;AAiB9C,wBAAyB,KAAzB,mIAAgC;AAAA;;AAAA,OAAtB,GAAsB;AAAA,OAAjB,KAAiB;;AAC/B,OAAI,MAAM,MAAN,GAAe,CAAnB,EAAsB;AACrB,eAAW,IAAX,CAAgB,KAAhB;AACA;AACD;AArB6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuB9C,QAAO,UAAP;AACA;;;;;;;;;;;;;;;;QCgjCe,I,GAAA,I;QAIA,G,GAAA,G;;AA5kChB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,sBAAY,MAAZ;;AAEA,IAAM,sBAAsB,aAA5B;IACC,yBAAyB,EAAE,QAAF,CAAW,EAAX,CAD1B,C;;;;AAKA,IAAI,YAAY,IAAI,GAAJ,EAAhB;IACC,aAAa,KADd;;AAGA,SAAS,MAAT,GAAkB;AACjB,KAAI,MAAM;AACT,WAAS,EAAE,MAAF,EAAU,SAAV,EADA;AAET,WAAS,EAAE,MAAF,EAAU,WAAV;AAFA,EAAV;;AADiB;AAAA;AAAA;;AAAA;AAMjB,uBAAe,SAAf,8HAA0B;AAAA,OAAjB,EAAiB;;AACzB,MAAG,kBAAH,CAAsB,GAAtB;AACA;AARgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASjB;;AAED,SAAS,MAAT,GAAkB;AACjB,KAAI,CAAC,UAAL,EAAiB;AAChB,eAAa,IAAb;AACA,IAAE,MAAF,EACE,EADF,CACK,uCADL,EAC8C,MAD9C,EAEE,EAFF,CAEK,mBAFL,EAE0B,UAF1B;AAIA;AACD;;AAED,SAAS,OAAT,GAAmB;AAClB,GAAE,MAAF,EAAU,GAAV,CAAc,cAAd;AACA,cAAa,KAAb;AACA;;AAED,SAAS,QAAT,CAAkB,WAAlB,EAA+B;AAC9B,WAAU,GAAV,CAAc,WAAd;AACA,KAAI,CAAC,UAAL,EAAiB;AAChB;AACA;AACD;;AAED,SAAS,UAAT,CAAoB,WAApB,EAAiC;AAChC,WAAU,MAAV,CAAiB,WAAjB;AACA,KAAI,UAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC3B;AACA;AACD;;AAED,SAAS,UAAT,CAAoB,KAApB,EAA2B;AAC1B,KAAI,MAAM,EAAE,MAAM,MAAR,EAAgB,OAAhB,CAAwB,cAAxB,CAAV;KACC,QAAQ,IAAI,IAAJ,CAAS,aAAT,CADT;;AAD0B;AAAA;AAAA;;AAAA;AAI1B,wBAAe,SAAf,mIAA0B;AAAA,OAAjB,EAAiB;;AACzB,OAAI,UAAU,EAAd,EAAkB;AACjB,OAAG,UAAH,CAAc,IAAd;AACA;AACD;AARyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS1B;;IAEY,W,WAAA,W;;;+BACS,O,EAAS;AAC7B,OAAI,WAAW,CAAC,SAAD,EAAY,cAAZ,CAAf;;AAD6B;AAAA;AAAA;;AAAA;AAG7B,0BAAiB,QAAjB,mIAA2B;AAAA,SAAlB,IAAkB;;AAC1B,SAAI,OAAO,QAAQ,IAAR,CAAP,KAAyB,WAA7B,EAA0C;AACzC,YAAM,IAAI,KAAJ,CAAU,OAAO,kBAAjB,CAAN;AACA;AACD;AAP4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ7B;;;AAED,sBAAa,OAAb,EAAsB;AAAA;;AAAA;;AACrB,cAAY,YAAZ,CAAyB,OAAzB;;;AAGA,OAAK,KAAL,GAAa,QAAQ,KAAR,IAAiB,IAAI,SAAS,KAAb,CAAmB;AAChD,aAAU;AADsC,GAAnB,CAA9B;;;AAKA,OAAK,WAAL,GAAmB,QAAQ,WAAR,IAAuB,aAA1C;;;AAGA,OAAK,SAAL,GAAiB,QAAQ,SAAR,IAAqB,EAAtC;;;AAGA,OAAK,GAAL,GAAW,QAAQ,OAAR,GAAkB,EAAE,QAAQ,OAAV,CAA7B;AACA,OAAK,GAAL,CAAS,QAAT,CAAkB,aAAlB;;AAEA,OAAK,UAAL,GAAkB,QAAQ,UAA1B;;AAEA,OAAK,SAAL,GAAiB,QAAQ,SAAR,IAAqB,EAAtC;;;;;;;;AAQA,UAAQ,KAAR,GAAgB,QAAQ,KAAR,IAAiB,QAAQ,QAAzC;AACA,MAAI,QAAQ,KAAZ,EAAmB;AAClB,OAAI,QAAQ,KAAR,YAAyB,SAAS,KAAtC,EAA6C;AAC5C,SAAK,KAAL,GAAa,QAAQ,KAArB;AACA,IAFD,MAEO;AACN,SAAK,KAAL,GAAa,SAAS,KAAT,CAAe,MAAf,CAAsB;AAClC,eAAU,QAAQ;AADgB,KAAtB,CAAb;AAGA;AACD,GARD,MAQO;AACN,QAAK,KAAL,GAAa,SAAS,KAAtB;AACA;;;;;;AAMD,OAAK,SAAL,GAAiB,UAAC,KAAD,EAAW;AAC3B,UAAO,IAAI,MAAK,KAAT,EAAP;AACA,GAFD;;;;;;;;;;;;;;;;AAkBA,OAAK,SAAL,GAAiB,UAAC,IAAD,EAAO,KAAP,EAAiB;AACjC,OAAI,QAAQ,SAAZ,EAAuB;AACtB,YAAQ,SAAR,CAAkB,KAAlB,CAAwB,IAAxB,EAA8B,QAAO,KAAP,CAA9B;AACA;AACD,GAJD;;;;AAQA,OAAK,gBAAL,GAAwB,QAAQ,gBAAhC;;;AAGA,OAAK,WAAL,GAAmB,QAAQ,WAAR,IAAuB,KAA1C;;;AAGA,OAAK,YAAL,GAAoB,KAAK,WAAL,IAAoB,QAAQ,YAA5B,IAA4C,KAAhE;;;;;AAKA,OAAK,WAAL,GAAmB,QAAQ,WAAR,IAAuB,KAA1C;;;AAGA,MAAI,QAAQ,SAAZ,EAAuB;AACtB,WAAQ,GAAR,CAAY,kFAAZ;AACA,QAAK,GAAL,CAAS,QAAT,WAA0B,QAAQ,SAAlC;AACA;;;;AAID,OAAK,iCAAL,GAA0C,EAAE,QAAF,CAAW;AAAA,UAAM,KAAK,KAAL,CAAW,MAAK,SAAL,CAAe,MAAf,CAAsB,MAAtB,GAA+B,GAA1C,CAAN;AAAA,GAAX,EAAiE,CAAjE,CAA1C;;;AAGA,OAAK,QAAL,GAAgB,EAAC,KAAK,CAAC,CAAP,EAAU,KAAK,CAAC,CAAhB,EAAhB;;;AAGA,OAAK,SAAL,GAAiB,IAAjB;;;;AAIA,OAAK,aAAL,GAAqB,IAAI,GAAJ,EAArB;;;;;;;AAOA,OAAK,aAAL,GAAqB,IAAI,GAAJ,EAArB;;AAEA,OAAK,KAAL,GAAa,YAAM;;;AAGlB,OAAI,gBAAgB,KAApB;OACC,gBAAgB,KADjB;OAGC,WAAW,SAAX,QAAW,GAAM;AAChB,QAAI,iBAAiB,aAArB,EAAoC;AAAA;AACnC,UAAI,WAAW,SAAX,QAAW,GAAM;AACpB,WAAI,OAAO,QAAQ,OAAf,KAA2B,UAA/B,EAA2C;AAC1C,gBAAQ,OAAR,CAAgB,KAAhB;AACA;AACD,aAAK,QAAL;AACA,OALD;;;;;AAUA,UAAI,MAAK,GAAL,CAAS,EAAT,CAAY,UAAZ,CAAJ,EAA6B;AAC5B;AACA,OAFD,MAEO;AAAA;AACN,YAAI,WAAW,YAAY,YAAM;AAChC,aAAI,MAAK,GAAL,CAAS,EAAT,CAAY,UAAZ,CAAJ,EAA6B;AAC5B;AACA,wBAAc,QAAd;AACA;AACD,SALc,EAKZ,GALY,CAAf;AADM;AAON;AApBkC;AAqBnC;;AAED,IA3BF;;AA6BA,SAAK,2BAAL,CAAiC,QAAQ,YAAzC,EAAuD,UAAC,UAAD,EAAgB;AACtE,UAAK,SAAL,GAAiB,KAAjB;;AAEA,QAAI,EAAE,sBAAsB,SAAS,UAAjC,CAAJ,EAAkD;AACjD,kBAAa,IAAI,SAAS,UAAb,CAAwB,UAAxB,CAAb;AACA;;AAED,UAAK,UAAL,GAAkB,UAAlB;;AAEA,QAAI,MAAK,SAAT,EAAoB;AACnB,WAAK,iBAAL,GAAyB,gCACxB,UADwB,EAExB,MAAK,SAFmB,EAGxB;AACC,gBAAU,kBAAC,KAAD;AAAA,cAAW,MAAK,qBAAL,CAA2B,KAA3B,CAAX;AAAA;AADX,MAHwB,CAAzB;AAOA;;AAED,UAAK,gBAAL;;AAEA,UAAK,gBAAL,GAAwB,+BAAqB;AAC5C,iBAAY,oBAAC,KAAD;AAAA,aAAW,MAAK,SAAL,CAAe,KAAf,CAAqB,KAArB,EAA4B;AACjD,qBAAc,MAAK;AAD8B,OAA5B,CAAX;AAAA,MADgC;AAI5C,eAAU,kBAAC,KAAD;AAAA,aAAW,MAAK,qBAAL,CAA2B,KAA3B,CAAX;AAAA,MAJkC;AAK5C,4BAAuB;AAAA,aAAM,MAAK,SAAL,CAAe,QAArB;AAAA,MALqB;AAM5C,oBAAe;AAAA,aAAM,MAAK,UAAX;AAAA,MAN6B;AAO5C,iBAAY,oBAAC,GAAD;AAAA,aAAS,MAAK,UAAL,CAAgB,GAAhB,CAAT;AAAA,MAPgC;AAQ5C,mBAAc;AAAA,aAAM,MAAK,SAAX;AAAA;AAR8B,KAArB,CAAxB;;AAWA,UAAK,UAAL,GAAkB;AACjB,eAAU;AADO,KAAlB;;AAIA,oBAAgB,IAAhB;;;AAGA,UAAK,QAAL,CAAc,YAAM,CAAE,CAAtB,EAAwB,KAAxB;;AAEA;AACA,IA1CD;;AA4CA,SAAK,yBAAL,CAA+B,OAA/B,EAAwC,YAAM;AAC7C,oBAAgB,IAAhB;AACA;AACA,IAHD;AAKA,GAjFD;;AAmFA,MAAI,QAAQ,SAAR,KAAsB,KAA1B,EAAiC;AAChC,QAAK,KAAL;AACA;AACD;;;;;;;4CAG0B,O,EAAS,I,EAAM;;AAEzC,OAAI,OAAO,KAAK,GAAL,CAAS,IAAT,CAAc,mBAAd,CAAP,KAA8C,WAAlD,EAA+D;AAC9D,SAAK,GAAL,CAAS,IAAT,CAAc,mBAAd,EAAmC,OAAnC;;AAEA;AACD,QAAK,GAAL,CAAS,IAAT,CAAc,mBAAd,EAAmC,IAAnC;;;AAGA,QAAK,cAAL,CAAoB,OAApB;;;AAGA,QAAK,wBAAL;;;;AAIA,QAAK,kBAAL;;;AAGA,QAAK,eAAL;;;;AAIA,OAAI,EAAE,EAAF,CAAK,OAAT,EAAkB;AACjB,MAAE,KAAK,SAAL,CAAe,MAAjB,EAAyB,OAAzB,CAAiC;AAChC,eAAU;AACT,UAAI,QADK;AAET,UAAI,OAFK;AAGT,iBAAW;AAHF,MADsB;AAMhC,YAAO,yBANyB;AAOhC,cAAS,mBAAY;AAAE,aAAO,EAAE,IAAF,EAAQ,IAAR,CAAa,gBAAb,CAAP;AAAwC;AAP/B,KAAjC;AASA;;;AAGD;AACA;;;;;;;;8CAM4B,Q,EAAU,I,EAAM;AAAA;;AAC5C,OAAI,MAAJ;;AAEA,OAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AACnC,aAAS,SACP,UAAC,IAAD;AAAA,YAAU,KAAK,IAAL,CAAV;AAAA,KADO,EAEP,UAAC,QAAD;AAAA,YAAc,OAAK,OAAL,CAAa,QAAb,CAAd;AAAA,KAFO,CAAT;;;;AAOA,QAAI,MAAJ,EAAY;AACX,UAAK,MAAL;AACA;AACD,IAXD,MAWO;AACN,SAAK,QAAL;AACA;AACD;;;6BAEW;AACX,YAAS,IAAT;AACA,QAAK,MAAL;AACA,QAAK,MAAL;AACA;;;4BAEU;AACV,cAAW,IAAX;AACA,QAAK,SAAL,CAAe,OAAf,CAAuB,MAAvB;AACA,QAAK,SAAL,CAAe,MAAf,CAAsB,MAAtB;AACA,QAAK,SAAL,CAAe,OAAf,CAAuB,MAAvB;AACA;;;iCAEe,O,EAAS;AAAA;;AACxB,OAAI,YAAY,EAAhB;OACC,aAAa,KAAK,GAAL,CAAS,IAAT,CAAc,8BAAd,CADd;OAEC,kBAAkB,SAAlB,eAAkB,CAAC,GAAD;AAAA,WAAS,OAAK,aAAL,CAAmB,GAAnB,CAAuB,GAAvB,CAAT;AAAA,IAFnB;OAGC,kBAAkB,SAAlB,eAAkB,CAAC,GAAD;AAAA,WAAS,OAAK,aAAL,CAAmB,GAAnB,CAAuB,GAAvB,CAAT;AAAA,IAHnB;;;AAMA,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,WAAW,MAA/B,EAAuC,GAAvC,EAA4C;AAC3C,QAAI,KAAK,EAAE,WAAW,CAAX,CAAF,CAAT;QACC,OAAO,GAAG,IAAH,CAAQ,MAAR,CADR;QAEC,WAAW,GAAG,IAAH,GAAU,IAAV,GAAiB,OAAjB,CAAyB,UAAzB,EAAqC,EAArC,EAAyC,OAAzC,CAAiD,gBAAjD,EAAmE,GAAnE,EAAwE,IAAxE,EAFZ;;AAIA,cAAU,IAAV,IAAkB,+BAAgB,QAAhB,EAA0B;AAC3C,WAAM,IADqC;AAE3C,mBAAc,KAAK,YAFwB;AAG3C,mBAAc,eAH6B;AAI3C,mBAAc,eAJ6B;AAK3C,eAAU,kBAAC,GAAD;AAAA,aAAS,QAAQ,OAAK,sBAAtB;AAAA,MALiC;AAM3C,kBAAa;AAAA,aAAM,OAAK,UAAL,CAAgB,IAAtB;AAAA;AAN8B,KAA1B,CAAlB;AAQA;;AAED,UAAQ,KAAK,SAAL,GAAiB,SAAzB;AACA;;;6CAE2B;AAC3B,QAAK,SAAL,GAAiB;AAChB,aAAS,EAAE,yCAAF,CADO;AAEhB,YAAQ,EAAE,sEAAF,CAFQ;AAGhB,aAAS,EAAE,yCAAF;AAHO,IAAjB;;AAMA,QAAK,SAAL,CAAe,QAAf,GAA0B,KAAK,SAAL,CAAe,MAAf,CAAsB,IAAtB,CAA2B,aAA3B,CAA1B;;AAEA,QAAK,GAAL,CAAS,MAAT,CAAgB,CACd,KAAK,SAAL,CAAe,OADD,EAEd,KAAK,SAAL,CAAe,MAFD,EAGd,KAAK,SAAL,CAAe,OAHD,CAAhB;;AAMA,QAAK,GAAL,CAAS,WAAT,CAAqB,cAArB,EAAqC,KAAK,YAA1C;AACA;;;qCAEmB;AAAA;;AACnB,QAAK,QAAL,CAAc,KAAK,UAAnB,EAA+B,QAA/B,EAAyC,UAAC,KAAD,EAAW;AACnD,WAAK,wBAAL,CAA8B,QAA9B,EAAwC,KAAxC,EAA+C,OAAK,UAApD;AACA,WAAK,qBAAL,CAA2B,KAA3B,EAAkC,IAAlC;AACA,WAAK,aAAL,CAAmB,MAAnB,CAA0B,MAAM,GAAhC;AACA,WAAK,4BAAL;AACA,WAAK,gBAAL,CAAsB,KAAtB;AACA,WAAK,MAAL;AACA;AACA,IARD;;AAUA,QAAK,QAAL,CAAc,KAAK,UAAnB,EAA+B,KAA/B,EAAsC,UAAC,KAAD,EAAW;AAChD,WAAK,wBAAL,CAA8B,KAA9B,EAAqC,KAArC,EAA4C,OAAK,UAAjD;AACA,WAAK,gBAAL,CAAsB,KAAtB;AACA,WAAK,MAAL;AACA;AACA,IALD;;AAOA,QAAK,QAAL,CAAc,KAAK,UAAnB,EAA+B,MAA/B,EAAuC,UAAC,CAAD,EAAO;AAC7C,WAAK,gBAAL,CAAsB,IAAtB;AACA,WAAK,gBAAL,CAAsB,KAAtB;AACA;AACA,IAJD;;AAMA,QAAK,QAAL,CAAc,KAAK,UAAnB,EAA+B,OAA/B,EAAwC,UAAC,CAAD,EAAO;AAC9C,WAAK,gBAAL,CAAsB,KAAtB;AACA;AACA,IAHD;;AAKA,QAAK,QAAL,CAAc,KAAK,UAAnB,EAA+B,QAA/B,EAAyC,UAAC,KAAD,EAAW;AACnD,WAAK,qBAAL,CAA2B,KAA3B,EAAkC,EAAE,IAAF,CAAO,MAAM,OAAb,CAAlC;AACA,WAAK,aAAL,CAAmB,KAAnB;AACA,WAAK,uBAAL,CAA6B,KAA7B;AACA,WAAK,KAAL,CAAW,GAAX,CAAe,UAAf,EAA2B,IAA3B;AACA,IALD;;AAOA,QAAK,QAAL,CAAc,KAAK,UAAnB,EAA+B,SAA/B,EAA0C,UAAC,KAAD,EAAW;AACpD,YAAQ,GAAR,CAAY,mBAAZ,EAAiC,KAAjC;AACA,IAFD;;;AAKA,QAAK,QAAL,CAAc,KAAK,KAAnB,EAA0B,KAA1B,EAAiC,UAAC,KAAD;AAAA,WAAW,OAAK,OAAL,CAAa,KAAb,CAAX;AAAA,IAAjC;AACA;;;wCAEsB,K,EAAO,M,EAAQ,M,EAAQ;AAC7C,OAAI,KAAK,iBAAL,KAA2B,KAAK,iBAAL,CAAuB,OAAvB,IAAkC,WAAW,IAAxE,CAAJ,EAAmF;AAClF,aAAS,WAAW,IAAX,GAAkB,SAAlB,GAA8B,MAAvC;;;;;AAKA,QAAI,gBAAJ;;AAEA,cAAU,KAAK,iBAAL,CAAuB,eAAvB,CAAuC,KAAvC,EAA8C,MAA9C,CAAV;AACA,SAAK,iBAAL,CAAuB,OAAvB;AACA,cAAU,IAAI,GAAJ,8BAAY,OAAZ,sBAAwB,KAAK,iBAAL,CAAuB,eAAvB,CAAuC,KAAvC,EAA8C,MAA9C,CAAxB,GAAV;;AAVkF;AAAA;AAAA;;AAAA;AAYlF,2BAAc,OAAd,mIAAuB;AAAlB,WAAkB;;AACtB,WAAK,aAAL,CAAmB,KAAnB;AACA;AAdiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBlF,WAAO,OAAP;AACA;AACD,UAAO,IAAI,GAAJ,EAAP,C;AACA;;;uCAEqB;AACrB,QAAK,SAAL,CAAe,OAAf,CAAuB,IAAvB,CAA4B,KAAK,SAAL,CAAe,MAAf,CAAsB,KAAK,KAA3B,EAAkC,GAA9D;AACA,QAAK,SAAL,CAAe,OAAf,CAAuB,IAAvB,CAA4B,KAAK,SAAL,CAAe,MAAf,CAAsB,KAAK,KAA3B,EAAkC,GAA9D;AACA;;;oCAEkB;AAAA;;AAClB,QAAK,GAAL,CACE,EADF,CACK,OADL,EACc,aADd,EAC6B,UAAC,CAAD;AAAA,WAAO,OAAK,gBAAL,CAAsB,CAAtB,CAAP;AAAA,IAD7B;;AAIA,QAAK,GAAL,CACE,EADF,CACK,OADL,EACc,aADd,EAC6B,UAAC,CAAD;AAAA,WAAO,OAAK,eAAL,CAAqB,CAArB,CAAP;AAAA,IAD7B;;AAIA,QAAK,SAAL,CAAe,MAAf,CACE,EADF,CACK,aADL,EACoB,cADpB,EACoC,UAAC,CAAD,EAAO;AACzC,QAAI,SAAS,EAAE,EAAE,MAAJ,EAAY,OAAZ,CAAoB,WAApB,CAAb;AACA,WAAK,UAAL,CAAgB,MAAhB;AACA,IAJF;AAMA;;;0BAEQ,M,EAAQ;AAChB,OAAI,KAAK,SAAT,EAAoB;AACnB,QAAI,OAAO,KAAK,KAAL,CAAW,GAAX,CAAe,kBAAf,KAAsC,sBAAjD;AACA,SAAK,SAAL,CAAe,QAAf,CAAwB,IAAxB,CAA6B,KAAK,MAAL,CAA7B;AACA;AACD;;;kCAEgB,K,EAAO;AACvB,OAAI,MAAM,EAAE,MAAM,MAAR,EAAgB,EAAhB,CAAmB,aAAnB,IAAoC,EAAE,MAAM,MAAR,CAApC,GAAsD,EAAE,MAAM,MAAR,EAAgB,OAAhB,CAAwB,aAAxB,CAAhE;OACC,SAAS,IAAI,OAAJ,CAAY,WAAZ,CADV;OAEC,SAAS,IAAI,IAAJ,CAAS,gBAAT,CAFV;;AAIA,UAAO,KAAK,aAAL,CAAmB,MAAnB,EAA2B,MAA3B,CAAP;AACA;;;gCAEc,M,EAAQ,M,EAAQ;AAC9B,OAAI,OAAO,KAAK,OAAL,CAAa,MAAb,CAAP,KAAgC,UAApC,EAAgD;AAC/C,WAAO,KAAK,OAAL,CAAa,MAAb,EAAqB,KAArB,CAA2B,IAA3B,EAAiC,CAAC,UAAU,OAAO,MAAjB,IAA2B,MAA5B,CAAjC,CAAP;AACA;AACD,SAAM,oBAAkB,MAAlB,kBAAN;AACA;;;;;;;6BAIW,M,EAAQ;AACnB,QAAK,UAAL,CAAgB,SAAS,KAAK,gBAAL,CAAsB,MAAtB,CAAT,GAAyC,IAAzD;AACA;;;;;;6BAGW,K,EAAO;AAClB,OAAI,KAAK,sBAAT,EAAiC;;AAEhC,SAAK,SAAL,CAAe,MAAf,CACE,IADF,CACO,WADP,EAEE,WAFF,CAEc,UAFd;;;AAMA,QAAI,CAAC,KAAD,IAAU,KAAK,sBAAL,KAAgC,MAAM,GAApD,EAAyD;AACxD,SAAI,YAAY,KAAK,UAAL,CAAgB,GAAhB,CAAoB,KAAK,sBAAzB,CAAhB;;AAEA,SAAI,SAAJ,EAAe;AACd,WAAK,aAAL,CAAmB,SAAnB;AACA;AACD;AACD;;AAED,QAAK,sBAAL,GAA8B,SAAS,MAAM,GAAf,IAAsB,IAApD;;AAEA,OAAI,KAAK,sBAAT,EAAiC;AAChC,QAAI,SAAS,KAAK,gBAAL,CAAsB,KAAtB,CAAb;AACA,QAAI,MAAJ,EAAY;AACX,YAAO,QAAP,CAAgB,UAAhB;AACA;AACD;AACD;;;mCAEiB,M,EAAQ;AACzB,UAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,OAAO,IAAP,CAAY,gBAAZ,CAApB,CAAP;AACA;;;mCAEiB,K,EAAO;;AAExB,OAAI,QAAQ,KAAK,SAAL,IAAkB,KAAK,SAAL,CAAe,MAAf,CAAsB,IAAtB,uBAA+C,MAAM,GAArD,QAA9B;AACA,UAAO,SAAS,MAAM,MAAf,IAAyB,KAAzB,IAAkC,SAAzC;AACA;;;0CAEwB,K,EAAO;AAC/B,OAAI,SAAS,KAAK,aAAL,CAAmB,GAAnB,CAAuB,MAAM,GAA7B,KAAqC,IAAI,GAAJ,EAAlD;AAD+B;AAAA;AAAA;;AAAA;AAE/B,0BAAgB,EAAE,IAAF,CAAO,MAAM,OAAb,CAAhB,mIAAuC;AAAA,SAA9B,GAA8B;;AACtC,YAAO,GAAP,CAAW,GAAX;AACA;AAJ8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAK/B,QAAK,aAAL,CAAmB,GAAnB,CAAuB,MAAM,GAA7B,EAAkC,MAAlC;;;AAGA,OAAI,QAAQ,KAAK,gBAAL,CAAsB,KAAtB,CAAZ;AACA,OAAI,KAAJ,EAAW;AACV,UAAM,IAAN,CAAW,aAAX,EAA0B,uBAA1B,CACC,MADD;AAGA;AACD;;;2BAES,K,EAAO,I,EAAM;AACtB,OAAI,KAAJ,EAAW,GAAX;;AAEA,UAAO,QAAQ,YAAY,CAAE,CAA7B;;AAEA,OAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;;;AAG9B,QAAI,SAAS,KAAK,0BAAL,IAAmC,KAAK,UAAL,CAAgB,MAAhE;AACA,YAAQ,OAAO,QAAQ,CAAf,CAAR;AACA,QAAI,KAAJ,EAAW;AACV,WAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAxB,CAAN;AACA,KAFD,MAEO;AACN,WAAM,KAAN,C;AACA;AACD,IAVD,MAUO,IAAI,iBAAiB,SAAS,KAA9B,EAAqC;AAC3C,aAAQ,KAAR;AACA,WAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAxB,CAAN;AACA,KAHM,MAGA;AACN,aAAQ,KAAK,UAAL,CAAgB,SAAhB,CAA0B,KAA1B,CAAR;AACA,WAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAxB,CAAN;AACA;;AAED,SAAM,KAAK,GAAL,CAAS,GAAT,EAAc,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAAvC,CAAN;;AAEA,OAAI,MAAM,KAAK,UAAf;OACC,aAAa,KAAK,iCAAL,EADd;OAEC,SAAS,KAAK,GAAL,CAAS,CAAT,EAAY,MAAM,IAAI,IAAV,GAAiB,UAAjB,IAA+B,IAAI,SAAJ,GAAgB,GAAhB,GAAsB,IAAI,IAAJ,GAAW,GAAhE,CAAZ,CAFV;;;AAKA,OAAI,EAAE,QAAN,EAAgB;AACf,MAAE,QAAF,CAAW,SAAS,IAApB,EAA0B;AACzB,eAAU,GADe;AAEzB,cAAS;AAFgB,KAA1B;AAIA,IALD,MAKO;AACN,MAAE,MAAF,EAAU,SAAV,CAAoB,MAApB;AACA,MAAE,KAAF,CAAQ,IAAR,E;AACA;AACD;;;mCAEiB,K,EAAO;AACxB,OAAI,MAAM,EAAE,MAAM,MAAR,CAAV;AACA,SAAM,IAAI,EAAJ,CAAO,aAAP,IAAwB,GAAxB,GAA8B,IAAI,OAAJ,CAAY,aAAZ,CAApC;;AAEA,OAAI;AAAA,0BACuB,IAAI,IAAJ,CAAS,OAAT,EAAkB,KAAlB,CAAwB,yBAAxB,CADvB;;AAAA;;AAAA,QACE,GADF;AAAA,QACO,IADP;AAAA,QACa,MADb;;AAEH,SAAK,cAAL,CAAoB,IAApB,EAA0B,MAA1B,EAAkC,GAAlC;AACA,IAHD,CAGE,OAAO,CAAP,EAAU;AACX,YAAQ,GAAR,CAAY,2BAAZ;AACA;AACD;;;;;;iCAGe,I,EAAM,M,EAAQ,G,EAAK,S,EAAW;AAAA;;AAC7C,OAAI,UAAU,KAAK,SAAL,CAAe,OAA7B;;AAEA,OAAI,CAAC,GAAL,EAAU;AACT,UAAM,QAAQ,IAAR,CAAa,uBAAb,CAAN;AACA;;AAED,OAAI,CAAC,SAAL,EAAgB;;AAEf,gBAAY,IAAI,QAAJ,CAAa,WAAb,IAA4B,KAA5B,GAAoC,MAAhD;AACA;;;;;;;AAOD,OAAI,SAAS,MAAb,EAAqB;AACpB,QAAI,OAAO,KAAK,0BAAZ,KAA2C,WAA/C,EAA4D;AAAA;AAC3D,UAAI,QAAQ,OAAK,0BAAjB;AACA,aAAK,UAAL,CAAgB,UAAhB,GAA6B,UAAC,CAAD,EAAI,CAAJ,EAAU;AACtC,WAAI,KAAK,MAAM,OAAN,CAAc,CAAd,CAAT;WACC,KAAK,MAAM,OAAN,CAAc,CAAd,CADN;;AAGA,cAAQ,KAAK,CAAL,IAAU,KAAK,CAAhB,GACN,CADM,GAEN,KAAK,EAFN;AAGA,OAPD;AAQA,aAAK,UAAL,CAAgB,IAAhB;AACA,aAAK,UAAL,CAAgB,UAAhB,GAA6B,SAA7B;AACA,aAAO,OAAK,0BAAZ;AAZ2D;AAa3D;;AAED,QAAI,cAAc,KAAlB,EAAyB;AACxB,UAAK,0BAAL,GAAkC,KAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAvB,EAAlC;AACA,UAAK,UAAL,CAAgB,MAAhB,CAAuB,OAAvB;AACA,UAAK,UAAL,CAAgB,OAAhB,CAAwB,MAAxB;AACA;AACD,IArBD,MAqBO;AACN,QAAI,OAAO,KAAK,0BAAZ,KAA2C,WAA/C,EAA4D;AAC3D,UAAK,0BAAL,GAAkC,KAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAvB,EAAlC;AACA;;AAED,SAAK,UAAL,CAAgB,UAAhB,GAA8B,cAAc,MAAf,GAC5B,UAAC,CAAD,EAAI,CAAJ;AAAA,YAAU,sBAAY,MAAZ,EAAoB,EAAE,GAAF,CAAM,IAAN,CAApB,EAAiC,EAAE,GAAF,CAAM,IAAN,CAAjC,CAAV;AAAA,KAD4B,GAE5B,UAAC,CAAD,EAAI,CAAJ;AAAA,YAAU,sBAAY,MAAZ,EAAoB,EAAE,GAAF,CAAM,IAAN,CAApB,EAAiC,EAAE,GAAF,CAAM,IAAN,CAAjC,CAAV;AAAA,KAFD;AAGA,SAAK,UAAL,CAAgB,IAAhB;AACA,SAAK,UAAL,CAAgB,UAAhB,GAA6B,SAA7B;AACA;;;AAGD,QAAK,MAAL,CAAY,KAAK,WAAL,IAAoB,OAAO,KAAK,0BAAZ,KAA2C,WAA3E;;;AAGA,WACE,IADF,CACO,uBADP,EAEE,WAFF,CAEc,UAFd,EAGE,WAHF,CAGc,WAHd;;;AAMA,WACE,IADF,iBACqB,IADrB,SAC6B,MAD7B,EAEE,QAFF,WAEmB,SAFnB;;AAKA,UAAO,KAAP;AACA;;;2CAEyB,K,EAAO,K,EAAO,U,EAAY;AACnD,OAAI,CAAJ,EAAO,KAAP;;AAEA,OAAI,KAAK,0BAAT,EAAqC;AACpC,QAAI,UAAU,KAAd,EAAqB;;AAEpB,SAAI,WAAW,OAAX,CAAmB,KAAnB,CAAJ,C;AACA,aAAQ,WAAW,EAAX,CAAc,IAAI,CAAlB,CAAR,C;AACA,SAAI,SAAS,KAAK,0BAAL,CAAgC,OAAhC,CAAwC,KAAxC,CAAT,IAA2D,CAA/D;AACA,UAAK,0BAAL,CAAgC,MAAhC,CAAuC,IAAI,CAA3C,EAA8C,CAA9C,EAAiD,KAAjD;AACA,KAND,MAMO,IAAI,UAAU,QAAd,EAAwB;;AAE9B,SAAI,KAAK,0BAAL,CAAgC,OAAhC,CAAwC,KAAxC,CAAJ;AACA,UAAK,0BAAL,CAAgC,MAAhC,CAAuC,CAAvC,EAA0C,CAA1C;AACA;AACD;AACD;;;wCAEsB,K,EAAO;AAC7B,OAAI,SAAS,KAAK,0BAAL,IAAmC,KAAK,UAAL,CAAgB,MAAhE;AACA,UAAO,OAAO,OAAP,CAAe,KAAf,CAAP;AACA;;;yCAOuB;AACvB,OAAI,KAAK,gBAAT,EAA2B;AAC1B,WAAQ,KAAK,UAAL,CAAgB,IAAhB,GAAuB,KAAK,UAAL,GAAkB,KAAK,gBAAtD;AACA;;AAED,OAAI,OAAO,KAAK,UAAL,CAAgB,IAAvB,KAAgC,WAApC,EAAiD;;;;;AAKhD,QAAI,SAAS,EAAE,KAAK,SAAL,CAAe,KAAf,CAAqB,QAAvB,CAAb;AACA,SAAK,SAAL,CAAe,MAAf,CAAsB,MAAtB,CAA6B,MAA7B;AACA,SAAK,WAAL,GAAmB,KAAK,IAAL,CAAU,OAAO,WAAP,EAAV,CAAnB;AACA,WAAO,MAAP;;AAEA,QAAI,KAAK,WAAL,KAAqB,CAAzB,EAA4B;AAC3B,OAAE,MAAF,EAAU,MAAV,CAAiB,MAAjB;AACA,UAAK,WAAL,GAAmB,KAAK,GAAL,CAAS,CAAT,EAAY,KAAK,IAAL,CAAU,OAAO,WAAP,EAAV,CAAZ,CAAnB;AACA,YAAO,MAAP;AACA;AACD;AACD,UAAQ,KAAK,UAAL,CAAgB,IAAhB,GAAuB,KAAK,WAApC;AACA;;;2BAES;;;AAGT,QAAK,oBAAL;AACA,QAAK,kBAAL;;AAEA,OAAI,KAAK,UAAT,EAAqB;AACpB,QAAI,SAAU,KAAK,UAAL,CAAgB,IAAhB,GAAuB,KAAK,UAAL,CAAgB,MAAxC,GAAkD,IAA/D;;;AAGA,SAAK,SAAL,CAAe,QAAf,CAAwB,GAAxB,CAA4B,QAA5B,EAAsC,MAAtC;AACA;AACD;;;2BAES;AACT,OAAI,KAAK,WAAL,KAAqB,KAAzB,EAAgC;AAC/B,QAAI,QAAQ,0BAAgB,KAAK,SAAL,CAAe,OAA/B,EAAwC,OAAO,KAAK,WAAZ,KAA4B,QAA5B,GAClD,KAAK,WAD6C,GAC/B,SADT,EACoB,KADpB,CAAZ;QAEC,WAAW,0BAAgB,KAAK,SAAL,CAAe,OAA/B,EAAwC,OAAO,KAAK,WAAZ,KAA4B,QAA5B,GAClD,KAAK,WAD6C,GAC/B,SADT,EACoB,QADpB,CAFZ;;AAKA,UAAM,IAAN,CAAW,QAAX;AACA,0BAAY,MAAZ;AACA;;AAED,QAAK,MAAL,CAAY,KAAK,WAAjB;AACA;;;qCAEmB,I,EAAM;AACzB,OAAI,OAAJ,EAAa,OAAb;;AAEA,OAAI,CAAC,KAAK,UAAV,EAAsB;AACrB;AACA;;AAED,OAAI,IAAJ,EAAU;AACT,cAAU,KAAK,OAAf;AACA,cAAU,KAAK,OAAf;AACA,IAHD,MAGO;AACN,cAAU,EAAE,MAAF,EAAU,SAAV,EAAV;AACA,cAAU,EAAE,MAAF,EAAU,WAAV,EAAV;AACA;;AAED,OAAI,kBAAkB,KAAK,iCAAL,EAAtB;OACC,mBAAmB,KAAK,UAAL,CAAgB,MADpC;OAEC,IAAI,KAAK,UAFV;OAGC,eAAe,EAAE,QAHlB;OAIC,MAAM,CAJP;;AAMA,KAAE,QAAF,GAAa,UAAU,eAAvB;AACA,KAAE,QAAF,GAAa,UAAU,eAAV,GAA4B,OAAzC;AACA,KAAE,SAAF,GAAc,EAAE,QAAF,GAAa,EAAE,QAA7B;AACA,KAAE,UAAF,GAAe,EAAE,QAAF,KAAe,YAAf,GAA8B,CAA9B,GAAmC,EAAE,QAAF,GAAa,YAAb,GAA4B,CAA5B,GAAgC,CAAC,CAAnF;;AAEA,KAAE,UAAF,GAAe,KAAK,GAAL,CAAS,CAAC,CAAV,EAAa,KAAK,GAAL,CAAS,mBAAmB,CAA5B,EAA+B,KAAK,KAAL,CAAW,EAAE,QAAF,GAAa,EAAE,IAAf,GAAsB,GAAjC,CAA/B,CAAb,CAAf;AACA,KAAE,UAAF,GAAe,KAAK,GAAL,CAAS,EAAE,UAAX,EAAuB,KAAK,GAAL,CAAS,CAAC,CAAV,EAAa,KAAK,KAAL,CAAW,EAAE,QAAF,GAAa,EAAE,IAA1B,IAAkC,GAA/C,CAAvB,CAAf;AACA,KAAE,WAAF,GAAgB,KAAK,GAAL,CAAS,CAAT,EAAY,EAAE,UAAF,GAAe,EAAE,UAA7B,CAAhB;AACA,KAAE,cAAF,GAAmB,KAAK,GAAL,CAAS,CAAT,EAAY,KAAK,IAAL,CAAU,UAAU,EAAE,IAAtB,IAA+B,MAAM,CAAjD,CAAnB;;AAEA,OAAI,KAAK,gBAAT,EAA2B;AAC1B,SAAK,gBAAL,CAAsB,MAAtB,CAA6B,KAAK,UAAlC;AACA;AACD;;;6BAEW,G,EAAK;AAChB,UAAO,KAAK,UAAL,CAAgB,EAAhB,CAAmB,GAAnB,CAAP;AACA;;;yBAEO,M,EAAQ;AAAA;;AACf,QAAK,GAAL,CAAS,WAAT,CAAqB,kBAArB,EAAyC,MAAzC;AACA,OAAI,MAAJ,EAAY;AACX,QAAI,CAAC,KAAK,GAAV,EAAe;AACd,UAAK,GAAL,GAAW,wBAAc,KAAK,SAAL,CAAe,MAA7B,EAAqC;AAC/C,iBAAW,WADoC;AAE/C,gBAAU,gBAFqC;AAG/C,gBAAU;AAAA,cAAa,OAAK,uBAAL,yBAAb;AAAA;AAHqC,MAArC,CAAX;AAKA;AACD,IARD,MAQO;AACN,QAAI,KAAK,GAAT,EAAc;AACb,UAAK,GAAL,CAAS,OAAT;AACA,YAAO,KAAK,GAAZ;AACA;AACD;AACD;;;0CAEwB,Q,EAAU,Q,EAAU;AAC5C,OAAI,MAAM,KAAK,UAAf;;AAEA,OAAI,QAAJ,EAAc;AACb,QAAI,CAAC,KAAK,UAAV,EAAsB;AACrB,SAAI,aAAa,EAAE,6BAAF,CAAjB;AACA,UAAK,SAAL,CAAe,QAAf,CAAwB,MAAxB,CAA+B,UAA/B;AACA,UAAK,UAAL,GAAkB,UAAlB;AACA;;AAED,QAAI,eAAe,KAAK,KAAL,CAAY,QAAD,GAAa,IAAI,IAA5B,IAAoC,IAAI,IAA3D;AACA,SAAK,UAAL,CAAgB,GAAhB,CAAoB,EAAC,KAAM,eAAe,CAAhB,GAAqB,IAA3B,EAApB;;AAEA,QAAI,QAAJ,EAAc;AACb,SAAI,KAAK,UAAT,EAAqB;AACpB,WAAK,UAAL,CAAgB,MAAhB;AACA,WAAK,UAAL,GAAkB,IAAlB;AACA;;;;;AAKD,SAAI,QAAQ,KAAK,UAAL,CAAgB,GAAhB,CAAoB,SAAS,IAAT,CAAc,gBAAd,CAApB,CAAZ;SACC,SAAS,KAAK,UAAL,CAAgB,MAD1B;SAEC,YAAY,OAAO,OAAP,CAAe,KAAf,CAFb;SAGC,UAAU,SAAU,QAAD,GAAa,IAAI,IAA1B,EAAgC,EAAhC,CAHX;;AAKA,eAAU,YAAY,OAAZ,GAAsB,UAAU,CAAhC,GAAoC,OAA9C;;AAEA,SAAI,cAAc,OAAlB,EAA2B;AAC1B;AACA;;AAED,YAAO,MAAP,CAAc,SAAd,EAAyB,CAAzB;AACA,YAAO,MAAP,CAAc,OAAd,EAAuB,CAAvB,EAA0B,KAA1B;AACA,UAAK,UAAL,CAAgB,OAAhB,CAAwB,MAAxB;AACA;AACD;AACD;;;mCAEiB,K,EAAO;AACxB,OAAI,KAAK,KAAK,iBAAd;;AAEA,OAAI,OAAO,EAAP,KAAc,WAAlB,EAA+B;AAC9B,QAAI,GAAG,OAAH,IAAc,KAAlB,EAAyB;AACxB,QAAG,OAAH;AACA;;AAH6B;AAAA;AAAA;;AAAA;AAK9B,2BAA4B,GAAG,2BAA/B,mIAA4D;AAAA;;AAAA,UAAlD,KAAkD;AAAA,UAA3C,MAA2C;;AAC3D,UAAI,gBAAgB,KAAK,aAAL,CAAmB,GAAnB,CAAuB,MAAM,GAA7B,KAAqC,EAAzD;AACA,UAAI,UAAU,EAAd;;AAF2D;AAAA;AAAA;;AAAA;AAI3D,6BAAiC,EAAE,KAAF,CAAQ,MAAR,CAAjC,mIAAkD;AAAA;;AAAA,YAAxC,KAAwC;AAAA,YAAjC,WAAiC;;AACjD,gBAAQ,KAAR,IAAiB,WAAjB;AACA;AAN0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQ3D,WAAK,aAAL,CAAmB,GAAnB,CAAuB,MAAM,GAA7B,EAAkC,OAAlC;;AAEA,UAAI,QAAQ,KAAK,gBAAL,CAAsB,KAAtB,CAAZ;AACA,UAAI,KAAJ,EAAW;AACV,aAAM,IAAN,CAAW,aAAX,EAA0B,qBAA1B,CACC,EAAE,IAAF,CAAO,oBAAK,aAAL,EAAoB,OAApB,CAAP,CADD;AAGA;AACD;AArB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsB9B;AACD;;;2BAES,I,EAAM,M,EAAQ;AACvB,OAAI,IAAI,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAAjC;OACC,aAAa,KAAK,UADnB;OAEC,OAAO,IAFR;OAIC,OAAO,SAAP,IAAO,GAAY;AAClB,QAAI,QAAQ,GAAZ;AACA,WAAO,UAAU,CAAjB,EAAoB;AACnB,SAAI,IAAI,CAAR,EAAW;AACV,WAAK,4BAAL;AACA,aAAO,MAAP;AACA;AACD,UAAK,aAAL,CAAmB,WAAW,MAAX,CAAkB,GAAlB,CAAnB,EAA2C,MAA3C;AACA;AACD,MAAE,KAAF,CAAQ,IAAR;AACA,IAdF;;AAgBA,QAAK,gBAAL,CAAsB,IAAtB;;AAEA;AACA;;;;;;+BAGa,M,EAAQ;AACrB,OAAI,SAAS,KAAK,UAAL,CAAgB,MAA7B;;AAEA,QAAK,gBAAL,CAAsB,IAAtB;;AAEA,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,MAA3B,EAAmC,GAAnC,EAAwC;AACvC,SAAK,aAAL,CAAmB,OAAO,CAAP,CAAnB,EAA8B,MAA9B;AACA;;AAED,QAAK,4BAAL;;;AAGA,UAAO,KAAK,aAAL,CAAmB,IAAnB,KAA4B,CAAnC;AACA;;;gCAEc,K,EAAO,M,EAAQ;AAC7B,OAAI,SAAS,MAAM,MAAN,EAAb;OACC,aADD;OAEC,MAFD;OAGC,UAAU,EAHX;OAIC,UAJD;OAKC,OALD;;;AAD6B;AAAA;AAAA;;AAAA;AAS7B,0BAA+B,EAAE,KAAF,CAAQ,KAAK,UAAb,CAA/B,mIAAyD;AAAA;;AAAA,SAA/C,KAA+C;AAAA,SAAxC,SAAwC;;;AAExD,SAAI,KAAK,WAAW,IAAX,CAAgB,OAAhB,CAAwB,SAAxB,CAAT;;AAEA,SAAI,UAAS,GAAG,OAAO,KAAP,KAAiB,EAApB,EAAwB,MAAxB,CAAb;AACA,SAAI,OAAJ,EAAY;AACX,cAAQ,KAAR,IAAiB,QAAO,KAAxB;AACA;AACD;AAjB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmB7B,OAAI,KAAK,iBAAL,IAA0B,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,KAA3B,CAA9B,EAAiE;AAAA;AAAA;AAAA;;AAAA;AAChE,2BAA8B,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,KAA3B,CAA9B,mIAAiE;AAAA;;AAAA,UAAvD,KAAuD;AAAA,UAAhD,QAAgD;;;;AAGhE,cAAQ,KAAR,IAAiB,QAAQ,KAAR,KAAkB,SAAS,CAAT,CAAnC;AACA;AAL+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhE;;;AAGD,mBAAgB,KAAK,aAAL,CAAmB,GAAnB,CAAuB,MAAM,GAA7B,KAAqC,EAArD;;AAEA,OAAI,EAAE,IAAF,CAAO,OAAP,EAAgB,MAApB,EAA4B;AAC3B,SAAK,aAAL,CAAmB,GAAnB,CAAuB,MAAM,GAA7B,EAAkC,OAAlC;AACA,IAFD,MAEO;;;AAGN,QAAI,KAAK,iBAAL,IAA0B,CAAC,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,KAA3B,CAA/B,EAAkE;AACjE,UAAK,aAAL,CAAmB,MAAnB,CAA0B,MAAM,GAAhC;AACA;AACD;;AAED,OAAI,MAAJ,EAAY;AACX;AACA;;;AAGD,OAAI,QAAQ,KAAK,gBAAL,CAAsB,KAAtB,CAAZ;AACA,OAAI,KAAJ,EAAW;AACV,UAAM,IAAN,CAAW,aAAX,EAA0B,qBAA1B,CACC,EAAE,IAAF,CAAO,oBAAK,aAAL,EAAoB,OAApB,CAAP,CADD;AAGA;AACD;;;;;;iDAG+B;AAC/B,OAAI,UAAU,KAAK,aAAL,CAAmB,IAAnB,GAA0B,CAAxC;;AAEA,QAAK,GAAL,CAAS,WAAT,CAAqB,SAArB,EAAgC,OAAhC;;AAEA,OAAI,CAAC,OAAD,IAAY,KAAK,SAAjB,IAA8B,KAAK,SAAL,CAAe,QAAjD,EAA2D;AAC1D,SAAK,SAAL,CACE,QADF,CAEE,IAFF,CAEO,iBAFP,EAGE,WAHF,CAGc,gBAHd;AAKA;AACD;;;qCAEmB;AAAA;;AACnB,OAAI,KAAJ;;AADmB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,SAGT,GAHS;AAAA,SAGJ,MAHI;;AAIlB,aAAQ,OAAO,IAAP,CAAY,MAAZ,EAAoB,CAApB,CAAR;;AAEA,SAAI,QAAQ,OAAK,UAAL,CAAgB,GAAhB,CAAoB,GAApB,CAAZ;AACA,YAAK,UAAL,CAAgB,KAAhB;;AAEA,YAAK,QAAL,CAAc,KAAd,EAAqB,YAAM;AAC1B,QAAE,KAAF,CAAQ,YAAM;;AAEb,WAAI,WAAW,OAAK,gBAAL,CAAsB,KAAtB,EAA6B,IAA7B,CAAkC,aAAlC,CAAf;AACA,gBAAS,UAAT,CAAoB,KAApB;AACA,OAJD;AAKA,MAND;;AAQA;AAAA;AAAA;AAjBkB;;AAGnB,2BAA0B,KAAK,aAAL,CAAmB,OAAnB,EAA1B,wIAAwD;AAAA;;AAAA;AAevD;AAlBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBnB;;;;;;;+BAuBa,U,EAAY;AACzB,OAAI,CAAC,UAAL,EAAiB;AAChB,SAAK,YAAL;AACA;;AAED,QAAK,aAAL,CAAmB,KAAnB;AACA,QAAK,cAAL,CAAoB,MAApB,EAA4B,SAA5B,EAAuC,IAAvC,EAA6C,MAA7C;AACA,UAAO,KAAK,UAAL,CAAgB,MAAhB,EAAP;AACA;;;;;;;wCAQsB;AACtB,QAAK,KAAL,CAAW,GAAX,CAAe,UAAf,EAA2B,KAA3B;AACA;;;sBArCc;AACd,OAAI,SAAS,EAAb;OACC,MAAM,KAAK,SAAL,CAAe,KAAf,CAAqB,QAArB,CAA8B,GADrC;;AADc;AAAA;AAAA;;AAAA;AAId,2BAA0B,KAAK,aAAL,CAAmB,OAAnB,EAA1B,wIAAwD;AAAA;;AAAA,SAA9C,GAA8C;AAAA,SAAzC,MAAyC;;AACvD,SAAI,WAAW,EAAf;AADuD;AAAA;AAAA;;AAAA;AAEvD,6BAAkB,EAAE,IAAF,CAAO,MAAP,CAAlB,wIAAkC;AAAA,WAAzB,KAAyB;;AACjC,gBAAS,KAAT,IAAkB,IAAI,KAAJ,CAAlB;AACA;AAJsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMvD,YAAO,IAAP,CAAY;AACX,WAAK,GADM,E;AAEX,gBAAU,QAFC,E;AAGX,cAAQ,MAHG,EAAZ;AAKA;AAfa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAgBd,UAAO,MAAP;AACA;;;sBAcsB;AACtB,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,UAAf,EAA2B,KAA3B,CAAP;AACA;;;sBAxVW,O,EAAS;AACpB,UAAO,EAAE,OAAF,EAAW,IAAX,CAAgB,mBAAhB,CAAP;AACA;;;;;;AA6VF,YAAY,SAAZ,CAAsB,OAAtB,GAAgC;;AAE/B,SAAQ,iBAAU,MAAV,EAAkB;AACzB,MAAI,QAAQ,KAAK,gBAAL,CAAsB,MAAtB,CAAZ;AACA,OAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAvB;AACA,SAAO,KAAP;AACA,EAN8B;;AAQ/B,SAAQ,gBAAU,MAAV,EAAkB;AACzB,MAAI,iBAAJ;;;AAGA,MAAI,MAAJ,EAAY;AACX,OAAI,SAAQ,KAAK,gBAAL,CAAsB,MAAtB,CAAZ;OACC,QAAQ,KAAK,UAAL,CAAgB,OAAhB,CAAwB,MAAxB,CADT;AAEA,cAAW,KAAK,SAAL,CAAe,QAAQ,CAAvB,CAAX;AACA,QAAK,UAAL,CAAgB,GAAhB,CAAoB,QAApB,EAA8B,EAAC,IAAI,QAAQ,CAAb,EAA9B;AACA,GALD,MAKO;AACN,cAAW,KAAK,SAAL,EAAX;AACA,QAAK,UAAL,CAAgB,IAAhB,CAAqB,QAArB;AACA;;AAED,OAAK,UAAL,CAAgB,QAAhB;AACA,OAAK,QAAL,CAAc,QAAd;AACA,SAAO,KAAP;AACA;AAzB8B,CAAhC;;AA4BO,IAAI,4BAAU,aAAd;;AAEA,SAAS,IAAT,CAAc,OAAd,EAAuB;AAC7B,QAAO,IAAI,WAAJ,CAAgB,OAAhB,CAAP;AACA;;AAEM,SAAS,GAAT,CAAa,QAAb,EAAuB;AAC7B,QAAO,YAAY,GAAZ,CAAgB,QAAhB,CAAP;AACA;;AAED,EAAE,MAAF,CAAS,YAAY,SAArB,EAAgC,SAAS,MAAzC;;QAES,W,GAAA,W;;;;;;;;;;;;;QCvjCO,S,GAAA,S;;AA3BhB;;;;AAEA,IAAI,oBAAoB;AACvB,SAAQ;AACP,eAAa,qBAAU,MAAV,EAAkB,MAAlB,EAA0B;AACtC,OAAI,MAAM,EAAV;AACA,OAAI,UAAU,OAAO,MAAjB,IAA2B,OAAO,MAAP,CAAc,MAA7C,EAAqD;AACpD,QAAI,OAAO,OAAO,MAAP,CACT,MADS,CACF,UAAC,KAAD;AAAA,YAAW,UAAU,OAAO,KAA5B;AAAA,KADE,EAET,GAFS,CAEL,UAAC,KAAD;AAAA,YAAW,OAAO,iBAAP,CAAyB,QAAzB,CAAkC,KAAlC,IAA2C,CAAtD;AAAA,KAFK,CAAX;;AAIA,0CAAoC,UAAU,IAAV,CAApC;AACA;;AAED,OAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACxB,WAAO,CAAC,GAAD,WAAa,OAAO,CAAP,CAAb,4BAA+C,IAA/C,CAAoD,GAApD,CAAP;AACA,IAFD,MAEO,IAAI,OAAO,MAAP,IAAiB,CAArB,EAAwB;AAC9B,WAAO,CAAC,GAAD,EAAS,OAAO,CAAP,CAAT,aAA0B,OAAO,CAAP,CAA1B,sCAAsE,IAAtE,CAA2E,GAA3E,CAAP;AACA;AACD,UAAO,CAAC,GAAD,EAAM,UAAU,MAAV,IAAoB,0BAA1B,EAAsD,IAAtD,CAA2D,GAA3D,CAAP;AACA,GAjBM;AAkBP,UAAQ,gBAAU,UAAV,EAAsB,MAAtB,EAA8B;AACrC,UAAO,gCAAW,UAAX,EAAuB,MAAvB,CAAP;AACA;AApBM;AADe,CAAxB;;AAyBO,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AAC9B,KAAI,IAAI,MAAJ,KAAe,CAAnB,EAAsB;AACrB,SAAO,EAAP;AACA;;AAED,KAAI,IAAI,MAAJ,KAAe,CAAnB,EAAsB;AACrB,SAAO,IAAI,CAAJ,CAAP;AACA;;AAED,KAAI,IAAI,MAAJ,KAAe,CAAnB,EAAsB;AACrB,SAAO,IAAI,CAAJ,IAAS,OAAT,GAAmB,IAAI,CAAJ,CAA1B;AACA;;AAED,QAAQ,IAAI,KAAJ,CAAU,CAAV,EAAa,IAAI,MAAJ,GAAa,CAA1B,EAA6B,IAA7B,CAAkC,IAAlC,CAAD,GAA4C,QAA5C,GAAwD,IAAI,IAAI,MAAJ,GAAa,CAAjB,CAA/D;AACA;;AAGD,SAAS,qBAAT,CAA+B,IAA/B,EAAqC,MAArC,EAA6C;AAC5C,KAAI,KAAK,kBAAkB,IAAlB,CAAT;;AAEA,QAAO,UAAC,UAAD,EAAgB;AACtB,SAAO;AACN,SAAM,IADA;AAEN,WAAQ,MAFF;AAGN,gBAAa,qBAAC,MAAD;AAAA,WAAY,GAAG,WAAH,CAAe,MAAf,EAAuB,MAAvB,CAAZ;AAAA,IAHP;AAIN,SAAM,GAAG,MAAH,CAAU,UAAV,EAAsB,MAAtB;AAJA,GAAP;AAMA,EAPD;AAQA;;IAEoB,iB;AACpB,4BAAa,UAAb,EAAyB,WAAzB,EAAsC,OAAtC,EAA+C;AAAA;;AAC9C,OAAK,UAAL,GAAkB,UAAlB;AACA,OAAK,WAAL,GAAmB,EAAnB;AACA,OAAK,gBAAL,CAAsB,WAAtB;AACA,OAAK,YAAL;;AAEA,OAAK,kBAAL,GAA0B,IAAI,GAAJ,EAA1B;AACA,OAAK,uBAAL,GAA+B,IAAI,GAAJ,EAA/B;;AAEA,OAAK,QAAL,GAAgB,QAAQ,QAAR,IAAqB,UAAC,KAAD;AAAA,UAAW,WAAW,OAAX,CAAmB,KAAnB,IAA4B,CAAvC;AAAA,GAArC;AACA;;;;iCAEe;AAAA;AAAA;AAAA;;AAAA;AACf,yBAA2B,KAAK,WAAhC,8HAA6C;AAAA;;AAAA,SAAnC,KAAmC;AAAA,SAA5B,KAA4B;;AAC5C,UAAK,QAAL,CAAc,KAAK,UAAnB,cAAyC,KAAzC,EAAkD,KAAK,cAAvD;AACA;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIf;;;mCAEiB,W,EAAa;AAC9B,OAAI,cAAc,IAAI,GAAJ,EAAlB;OACC,oBAAoB,IAAI,GAAJ,EADrB;;AAD8B;AAAA;AAAA;;AAAA;AAI9B,0BAAiC,EAAE,KAAF,CAAQ,WAAR,CAAjC,mIAAuD;AAAA;;AAAA,SAA7C,UAA6C;AAAA,SAAjC,MAAiC;AAAA;AAAA;AAAA;;AAAA;;AAEtD,4BAAmB,MAAnB,mIAA2B;AAAA,WAAlB,MAAkB;;AAC1B,WAAI,KAAK,sBAAsB,UAAtB,EAAkC,MAAlC,CAAT;;AAEA,yBAAkB,GAAlB,CAAsB,EAAtB;;AAH0B;AAAA;AAAA;;AAAA;AAK1B,8BAAkB,MAAlB,mIAA0B;AAAA,aAAjB,KAAiB;;AACzB,aAAI,KAAK,YAAY,GAAZ,CAAgB,KAAhB,CAAT;AACA,aAAI,EAAJ,EAAQ;AACP,aAAG,IAAH,CAAQ,EAAR;AACA,UAFD,MAEO;AACN,sBAAY,GAAZ,CAAgB,KAAhB,EAAuB,CAAC,EAAD,CAAvB;AACA;AACD;AAZyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa1B;AAfqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBtD;AArB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuB9B,QAAK,WAAL,GAAmB,WAAnB;AACA,QAAK,iBAAL,GAAyB,iBAAzB;AACA;;;;;;;;;iCAMe,K,EAAO,K,EAAO;AAC7B,OAAI,UAAU,EAAE,IAAF,CAAO,MAAM,OAAb,CAAd;;;;AAD6B;AAAA;AAAA;;AAAA;AAK7B,0BAAkB,OAAlB,mIAA2B;AAAA,SAAlB,KAAkB;;AAC1B,SAAI,aAAa,KAAK,WAAL,CAAiB,GAAjB,CAAqB,KAArB,CAAjB;AAD0B;AAAA;AAAA;;AAAA;AAE1B,4BAAiB,UAAjB,mIAA6B;AAAA,WAApB,IAAoB;;;;AAG5B,YAAK,kBAAL,CAAwB,GAAxB,CAA4B,IAA5B;AACA;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO1B;AAZ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa7B;;;4BAEU;AACV,OAAI,UAAU,KAAK,OAAL,GACb,KAAK,kBADQ,GAEb,KAAK,iBAFN;OAGC,SAAS,IAAI,GAAJ,EAHV;OAIC,eAAe,IAAI,GAAJ,EAJhB;;AADU;AAAA;AAAA;;AAAA;AAQV,0BAAe,OAAf,mIAAwB;AAAA,SAAf,EAAe;;AACvB,SAAI,SAAS,GAAG,KAAK,UAAR,CAAb;SACC,gBAAgB,IAAI,GAAJ,EADjB;;AAGA,SAAI,OAAO,IAAP,CAAY,MAAhB,EAAwB;AAAA;AAAA;AAAA;;AAAA;AACvB,6BAAkB,OAAO,IAAzB,mIAA+B;AAAA,YAAtB,KAAsB;;AAC9B,YAAI,SAAS;AACZ,wBAAe,OAAO,WADV;AAEZ,iBAAQ,OAAO,MAFH;AAGZ,iBAAQ;AAHI,SAAb;;AAD8B;AAAA;AAAA;;AAAA;AAO9B,+BAAkB,KAAlB,mIAAyB;AAAA,cAAhB,KAAgB;;;;AAGxB,wBAAc,GAAd,CAAkB,KAAlB,EAAyB,MAAzB;AACA,iBAAO,GAAP,CAAW,KAAX;AACA;AAZ6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa9B;AAdsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAevB;;AAED,UAAK,uBAAL,CAA6B,GAA7B,CAAiC,EAAjC,EAAqC,aAArC;AACA;AA9BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgCV,QAAK,kBAAL,GAA0B,IAAI,GAAJ,EAA1B;AACA;;;;;;;;sBAoBI,K,EAAO;AACX,OAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC9B,YAAQ,KAAK,UAAL,CAAgB,GAAhB,CAAoB,KAApB,CAAR;AACA;;AAHU;AAAA;AAAA;;AAAA;AAKX,2BAAsB,KAAK,uBAAL,CAA6B,OAA7B,EAAtB,wIAA8D;AAAA;;AAAA,SAApD,EAAoD;AAAA,SAAhD,GAAgD;;AAC7D,SAAI,IAAI,GAAJ,CAAQ,KAAR,CAAJ,EAAoB;AACnB,aAAO,IAAP;AACA;AACD;AATU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUX,UAAO,KAAP;AACA;;;;;;sBAGI,K,EAAO;AACX,OAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC9B,YAAQ,KAAK,UAAL,CAAgB,GAAhB,CAAoB,KAApB,CAAR;AACA;;AAED,OAAI,SAAS,IAAI,GAAJ,EAAb;;AALW;AAAA;AAAA;;AAAA;AAOX,2BAAsB,KAAK,uBAAL,CAA6B,OAA7B,EAAtB,wIAA8D;AAAA;;AAAA,SAApD,EAAoD;AAAA,SAAhD,GAAgD;;AAC7D,SAAI,SAAS,IAAI,GAAJ,CAAQ,KAAR,CAAb;;AAEA,SAAI,MAAJ,EAAY;AACX,UAAI,cAAc,OAAO,aAAP,CAAqB;AACtC,cAAO,KAD+B;AAEtC,0BAAmB,IAFmB;AAGtC,mBAAY,KAAK,UAHqB;AAItC,eAAQ,OAAO;AAJuB,OAArB,CAAlB;;AADW;AAAA;AAAA;;AAAA;AAQX,8BAAkB,OAAO,MAAzB,wIAAiC;AAAA,YAAxB,KAAwB;;AAChC,YAAI,eAAe,OAAO,GAAP,CAAW,KAAX,CAAnB;AACA,YAAI,CAAC,YAAL,EAAmB;AAClB,wBAAe,CAAC,WAAD,CAAf;AACA,gBAAO,GAAP,CAAW,KAAX,EAAkB,YAAlB;AACA,SAHD,MAGO;AACN,sBAAa,IAAb,CAAkB,WAAlB;AACA;AACD;AAhBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBX;AACD;AA5BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6BX,UAAO,MAAP;AACA;;;kCA2BgB,K,EAAO,M,EAAQ;AAC/B,OAAI,SAAS,IAAI,GAAJ,EAAb;;;;AAIA,OAAI,kBAAJ;AACA,OAAI,MAAJ,EAAY;AACX,gBAAY,IAAI,GAAJ,EAAZ;AADW;AAAA;AAAA;;AAAA;AAEX,4BAAkB,IAAI,GAAJ,CAAQ,MAAR,CAAlB,wIAAmC;AAAA,UAA1B,KAA0B;;AAClC,UAAI,KAAK,WAAL,CAAiB,GAAjB,CAAqB,KAArB,CAAJ,EAAiC;AAAA;AAAA;AAAA;;AAAA;AAChC,+BAAe,KAAK,WAAL,CAAiB,GAAjB,CAAqB,KAArB,CAAf,wIAA4C;AAAA,aAAnC,EAAmC;;AAC3C,mBAAU,GAAV,CAAc,EAAd;AACA;AAH+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhC;AACD;AARU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASX,IATD,MASO;AACN,gBAAY,KAAK,iBAAjB;AACA;;AAjB8B;AAAA;AAAA;;AAAA;AAmB/B,2BAAe,SAAf,wIAA0B;AAAA,SAAjB,GAAiB;;AACzB,SAAI,MAAM,KAAK,uBAAL,CAA6B,GAA7B,CAAiC,GAAjC,CAAV;AADyB;AAAA;AAAA;;AAAA;AAEzB,6BAAkB,IAAI,IAAJ,EAAlB,wIAA8B;AAAA,WAArB,MAAqB;;AAC7B,cAAO,GAAP,CAAW,MAAX;AACA;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKzB;AAxB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0B/B,UAAO,MAAP;AACA;;;sBApHc;AACd,UAAO,KAAK,kBAAL,CAAwB,IAAxB,GAA+B,CAAtC;AACA;;;;;;sBAGa;AACb,OAAI,SAAS,IAAI,GAAJ,EAAb;AADa;AAAA;AAAA;;AAAA;AAEb,2BAAsB,KAAK,uBAAL,CAA6B,OAA7B,EAAtB,wIAA8D;AAAA;;AAAA,SAApD,EAAoD;AAAA,SAAhD,GAAgD;AAAA;AAAA;AAAA;;AAAA;AAC7D,6BAAkB,IAAI,IAAJ,EAAlB,wIAA8B;AAAA,WAArB,KAAqB;;AAC7B,cAAO,GAAP,CAAW,KAAX;AACA;AAH4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI7D;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOb,UAAO,MAAP;AACA;;;sBAmDkC;AAClC,OAAI,SAAS,IAAI,GAAJ,EAAb;;AADkC;AAAA;AAAA;;AAAA;AAGlC,2BAAsB,KAAK,uBAAL,CAA6B,OAA7B,EAAtB,wIAA8D;AAAA;;AAAA,SAApD,EAAoD;AAAA,SAAhD,GAAgD;AAAA;AAAA;AAAA;;AAAA;AAC7D,6BAA4B,GAA5B,wIAAiC;AAAA;;AAAA,WAAvB,KAAuB;AAAA,WAAhB,MAAgB;;AAChC,WAAI,cAAc,OAAO,aAAP,CAAqB;AACrC,eAAO,KAD8B;AAErC,2BAAmB,IAFkB;AAGrC,oBAAY,KAAK,UAHoB;AAIrC,gBAAQ,OAAO;AAJsB,QAArB,CAAlB;;AAOA,WAAI,SAAS,OAAO,GAAP,CAAW,KAAX,KAAqB,EAAlC;;AARgC;AAAA;AAAA;;AAAA;AAUhC,+BAAkB,OAAO,MAAzB,wIAAiC;AAAA,aAAxB,KAAwB;;AAChC,gBAAO,KAAP,IAAgB,WAAhB;AACA;AAZ+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAchC,cAAO,GAAP,CAAW,KAAX,EAAkB,MAAlB;AACA;AAhB4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB7D;AApBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBlC,UAAO,MAAP;AACA;;;;;;kBA3LmB,iB;;;AA2NrB,EAAE,MAAF,CAAS,kBAAkB,SAA3B,EAAsC,SAAS,MAA/C;;;;;;;;kBCpRwB,I;AAAT,SAAS,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoB,MAApB,EAA4B;;AAE1C,KAAI,SAAS,EAAb;KACC,QAAQ,EADT;KAEC,CAFD;KAEI,CAFJ;;AAIA,UAAS,UAAU,EAAnB;;;AAGA,MAAK,CAAL,IAAU,CAAV,EAAa;AACZ,MAAI,OAAO,OAAP,CAAe,CAAf,IAAoB,CAAC,CAAzB,EAA4B;AAC3B;AACA;AACD,MAAI,EAAE,cAAF,CAAiB,CAAjB,CAAJ,EAAyB;AACxB,SAAM,IAAN,CAAW,CAAX;AACA;AACD;;AAED,MAAK,CAAL,IAAU,CAAV,EAAa;AACZ,MAAI,OAAO,OAAP,CAAe,CAAf,IAAoB,CAAC,CAAzB,EAA4B;AAC3B;AACA;AACD,MAAI,EAAE,cAAF,CAAiB,CAAjB,CAAJ,EAAyB;;AAExB,OAAI,EAAE,CAAF,MAAS,EAAE,CAAF,CAAb,EAAmB;AAClB,WAAO,CAAP,IAAY,EAAE,CAAF,CAAZ;AACA;;AAED,OAAI,MAAM,OAAN,CAAc,CAAd,CAAJ;AACA,OAAI,IAAI,CAAC,CAAT,EAAY;AACX,UAAM,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACA;AACD;AACD;;;;AAID,MAAK,CAAL,IAAU,KAAV,EAAiB;AAChB,SAAO,MAAM,CAAN,CAAP,IAAmB,SAAnB;AACA;;AAED,QAAO,MAAP;AACA;;;;;;;;;;;;;;AC1CD,IAAI,KAAK,eAAT;;IAEqB,S;AACpB,oBAAa,GAAb,EAAkB,OAAlB,EAA2B;AAAA;;AAAA;;AAC1B,OAAK,GAAL,GAAW,GAAX;AACA,OAAK,QAAL,GAAgB,QAAQ,QAAxB;AACA,OAAK,UAAL,GAAkB,QAAQ,QAA1B;AACA,OAAK,cAAL,GAAsB,UAAC,KAAD;AAAA,UAAW,EAAE,MAAM,MAAR,EAAgB,OAAhB,CAAwB,QAAQ,SAAhC,CAAX;AAAA,GAAtB;AACA,OAAK,SAAL,GAAiB,QAAQ,SAAR,IAAqB,GAAtC;AACA,OAAK,WAAL,GAAmB,QAAQ,WAAR,IAAuB,CAA1C;AACA,OAAK,GAAL,CAAS,EAAT,CAAe,KAAK,UAApB,kBAA2C,EAA3C,EAAiD,KAAK,UAAtD,EAAkE,UAAC,CAAD;AAAA,UAAO,MAAK,WAAL,CAAiB,CAAjB,CAAP;AAAA,GAAlE;AACA,OAAK,SAAL,GAAiB,KAAjB;AACA;;;;4BAEU;AACV,QAAK,GAAL,CAAS,GAAT,eAAyB,EAAzB;AACA;;;+BAEa,U,EAAY;AAAA;;AACzB,KAAE,MAAF,EACE,EADF,eACiB,EADjB,EACuB,UAAC,CAAD;AAAA,WAAO,OAAK,WAAL,CAAiB,CAAjB,CAAP;AAAA,IADvB,EAEE,EAFF,aAEe,EAFf,EAEqB,UAAC,CAAD;AAAA,WAAM,OAAK,SAAL,CAAe,CAAf,CAAN;AAAA,IAFrB;AAIA;;;oCAEkB;AAClB,KAAE,MAAF,EACE,GADF,eACkB,EADlB,EAEE,GAFF,aAEgB,EAFhB;AAIA;;;8BAEY,C,EAAG;;AAEf,QAAK,cAAL,GAAsB,KAAK,cAAL,CAAoB,CAApB,CAAtB;AACA,QAAK,MAAL,GAAc,OAAO,WAAP,GAAqB,EAAE,OAArC;AACA,QAAK,QAAL,GAAgB,KAAhB;AACA,QAAK,YAAL;AACA,KAAE,cAAF;;;AAGA,OAAI,eAAe,KAAK,YAAL,GAAoB,EAAE,MAAF,EAAU,WAAV,EAAvC;AACA,QAAK,SAAL,GAAiB,KAAK,SAAtB;AACA,QAAK,SAAL,GAAiB,eAAe,KAAK,SAArC;AACA,UAAO,KAAP;AACA;;;8BAEY,C,EAAG;AACf,OAAI,QAAQ,OAAO,WAAP,GAAqB,EAAE,OAAvB,GAAiC,KAAK,MAAlD;OACC,IAAI,EAAE,OADP;;AAGA,QAAK,OAAL,GAAe,CAAf;;AAEA,OAAI,KAAK,QAAT,EAAmB;AAClB,QAAI,CAAC,KAAK,SAAN,KAAoB,IAAI,KAAK,SAAT,IAAsB,IAAI,KAAK,SAAnD,CAAJ,EAAmE;AAClE,UAAK,aAAL,CAAmB,CAAnB;AACA;AACD,WAAO,KAAK,MAAL,CAAY,KAAZ,CAAP;AACA;;AAED,QAAK,QAAL,GAAgB,KAAK,GAAL,CAAS,KAAT,IAAkB,CAAlC;;AAEA,OAAI,KAAK,QAAT,EAAmB;AAClB,WAAO,KAAK,WAAL,EAAP;AACA;AACD;;;4BAEU,C,EAAG;AACb,OAAI,QAAQ,OAAO,WAAP,GAAqB,EAAE,OAAvB,GAAiC,KAAK,MAAlD;;AAEA,QAAK,YAAL;AACA,OAAI,KAAK,QAAT,EAAmB;AAClB,SAAK,SAAL,CAAe,KAAf;AACA;AACD,QAAK,eAAL;AACA;;;8BAGY,M,EAAQ;AACpB,QAAK,UAAL,GAAkB,KAAK,cAAL,CAChB,KADgB,GAEhB,QAFgB,CAEP,UAFO,CAAlB;;AAKA,QAAK,cAAL,CACE,MADF,GAEE,MAFF,CAES,KAAK,UAFd;;AAIA,OAAI,MAAM,KAAK,cAAL,CAAoB,QAApB,GAA+B,GAAzC;AACA,OAAI,SAAS,KAAK,cAAL,CAAoB,WAApB,EAAb;;AAEA,QAAK,cAAL,GAAsB,GAAtB;;AAEA,QAAK,WAAL,GAAmB,UAAU,KAAV,EAAiB;AACnC,WAAQ,MAAM,MAAP,GAAiB,KAAxB;AACA,IAFD;;AAIA,QAAK,QAAL,CAAc,KAAK,WAAL,CAAiB,CAAjB,CAAd;AACA;;;yBAEO,K,EAAO;AACd,QAAK,UAAL,CAAgB,GAAhB,CAAoB,WAApB,EAAiC,iBAAiB,KAAK,cAAL,GAAsB,KAAvC,IAAgD,KAAjF;AACA,QAAK,QAAL,CAAc,KAAK,WAAL,CAAiB,KAAjB,CAAd;AACA;;;4BAEU,K,EAAO;AACjB,QAAK,UAAL,CAAgB,MAAhB;AACA,QAAK,QAAL,CAAc,KAAK,WAAL,CAAiB,KAAjB,CAAd,EAAuC,KAAK,cAA5C;AACA;;;gCAEc,C,EAAG;AACjB,OAAI,IAAJ;OACC,OAAO,IADR;OAEC,MAAM,KAAK,SAFZ;OAGC,MAAM,KAAK,SAHZ;OAIC,SAAS,KAAK,SAJf;OAKC,QAAQ,KAAK,WALd;OAMC,SAAS,SAAT,MAAS,CAAU,SAAV,EAAqB;AAC7B,QAAI,QAAQ,CAAC,aAAa,QAAQ,SAArB,CAAD,IAAoC,KAAhD;QACC,eADD;;AAGA,QAAI,KAAK,OAAL,GAAe,GAAnB,EAAwB;AACvB,cAAU,CAAC,MAAM,KAAK,OAAZ,IAAuB,MAAxB,GAAkC,KAAlC,GAA0C,CAAC,CAApD;AACA,KAFD,MAEO,IAAI,KAAK,OAAL,GAAe,GAAnB,EAAwB;AAC9B,cAAU,CAAC,KAAK,OAAL,GAAe,GAAhB,IAAuB,MAAxB,GAAkC,KAA3C;AACA,KAFM,MAEA;AACN,YAAO,KAAK,YAAL,EAAP;AACA;;AAED,QAAI,MAAJ,EAAY;AACX,cAAS,KAAK,IAAL,CAAU,MAAV,CAAT;AACA,YAAO,QAAP,CAAgB,CAAhB,EAAmB,MAAnB;AACA,UAAK,MAAL,CAAY,OAAO,WAAP,GAAqB,KAAK,OAA1B,GAAoC,KAAK,MAArD;AACA;;AAED,QAAI,KAAK,SAAT,EAAoB;AACnB,2BAAsB,MAAtB;AACA;;AAED,WAAO,SAAP;AACA,IA7BF;;AA+BA,yBAAsB,MAAtB;AACA,QAAK,SAAL,GAAiB,IAAjB;AACA;;;iCAEe;AACf,QAAK,SAAL,GAAiB,KAAjB;AAEA;;;;;;kBAnJmB,S;QAsJZ,S,GAAA,S;;;;;;;;;;;;;ICxJY,S;AAEpB,oBAAa,OAAb,EAAsB;AAAA;;AACrB,OAAK,gBAAL,GAAwB,QAAQ,gBAAhC;AACA,OAAK,UAAL,GAAkB,QAAQ,UAA1B;AACA,OAAK,OAAL,GAAe,EAAf;AACA,OAAK,MAAL,GAAc,CAAd;AACA,OAAK,MAAL,GAAc,CAAd;AACA;;;;0BAEQ;AACR,QAAK,MAAL,GAAc,CAAd;AACA,QAAK,MAAL,GAAc,CAAd;;AAEA,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,OAAL,CAAa,MAAjC,EAAyC,GAAzC,EAA8C;AAC7C,SAAK,OAAL,CAAa,CAAb,EAAgB,GAAhB,CACE,IADF;AAGA;AACD;;;yBAEO,C,EAAG;AACV,OAAI,WAAW,EAAf;OACA,UAAU,KAAK,gBAAL,EADV;;AAGA,OAAI,CAAC,OAAL,EAAc;AACb,UAAM,MAAM,6BAAN,CAAN;AACA;;AAED,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA4B;AAC3B,QAAI,QAAQ,KAAK,UAAL,EAAZ;AACA,SAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB;AACA,aAAS,IAAT,CAAc,MAAM,GAApB;AACA,UAAM,GAAN,CAAU,IAAV,G;AACA;;AAED,WAAQ,MAAR,CAAe,QAAf;AACA;;;4BAEU;AACV,OAAI,IAAI,KAAK,MAAb;AACA,QAAK,MAAL,GAAc,KAAK,GAAL,CAAS,KAAK,MAAL,GAAc,CAAvB,EAA0B,KAAK,OAAL,CAAa,MAAvC,CAAd;;AAEA,QAAK,MAAL,GAAc,CAAC,KAAK,MAAL,GAAc,CAAf,IAAoB,KAAK,OAAL,CAAa,MAA/C;;AAEA,UAAO,CAAP;AACA;;;6BAEW;AACX,OAAI,IAAK,KAAK,MAAL,GAAc,KAAK,MAAnB,GAA4B,CAArC;;AAEA,OAAI,KAAK,MAAL,GAAc,KAAK,OAAL,CAAa,MAA/B,EAAuC;AACtC,SAAK,MAAL;AACA,IAFD,MAEO;AACN,SAAK,MAAL;AACA,WAAO,KAAK,MAAL,GAAc,CAArB,EAAwB;AACvB,UAAK,MAAL,IAAe,KAAK,OAAL,CAAa,MAA5B;AACA;AACD;;AAED,UAAO,IAAI,CAAX,EAAc;AACb,QAAI,KAAK,OAAL,CAAa,MAAb,GAAsB,CAA1B;AACA;;AAED,UAAO,CAAP;AACA;;;0BAEQ;AACR,OAAI,IAAI,KAAK,MAAL,GAAc,KAAK,OAAL,CAAa,MAAnC;AACA,UAAO,IAAI,CAAX,EAAc;AACb,SAAK,KAAK,OAAL,CAAa,MAAlB;AACA;AACD,QAAK,MAAL,GAAc,CAAd;AACA,UAAO,CAAP;AACA;;;sBAEI,K,EAAO;AACX,OAAI,UAAJ;;AAEA,OAAI,QAAQ,CAAZ,EAAe;AACd,QAAI,KAAK,OAAL,CAAa,KAAK,OAAL,EAAb,CAAJ;AACA,IAFD,MAEO;AACN,QAAI,KAAK,OAAL,CAAa,KAAK,QAAL,EAAb,CAAJ;AACA;;AAED,UAAO,CAAP;AACA;;;sBAEa;AACb,UAAO,KAAK,OAAL,CAAa,MAApB;AACA;;;;;;kBA1FmB,S;;;;;;;;;;;;ACArB;;;;;;;;IAEqB,gB;AACpB,2BAAa,OAAb,EAAsB;AAAA;;AACrB,OAAK,OAAL,GAAe,OAAf;;AAEA,OAAK,aAAL,GAAqB,QAAQ,aAA7B;AACA,OAAK,UAAL,GAAkB,QAAQ,UAA1B;AACA,OAAK,YAAL,GAAoB,QAAQ,YAA5B;;AAEA,OAAK,SAAL,GAAiB,wBAAc;AAC9B,eAAY,QAAQ,UADU;AAE9B,qBAAkB,QAAQ;AAFI,GAAd,CAAjB;;AAKA,OAAK,KAAL;AACA;;;;0BAEQ;AACR,QAAK,SAAL,CAAe,KAAf;AACA,QAAK,UAAL,GAAkB,CAAC,CAAnB;AACA,QAAK,UAAL,GAAkB,CAAC,CAAnB;AACA;;;iCAEe,K,EAAO,G,EAAK;AAC3B,OAAI,OAAO,KAAK,SAAL,CAAe,GAAf,CAAmB,KAAnB,CAAX;AACA,OAAI,QAAQ,KAAK,UAAL,CAAgB,GAAhB,CAAZ;;AAEA,QAAK,QAAL,CAAc,KAAd,EAAqB;AACpB,UAAM,KAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB,IAA+B;AADjB,IAArB;;AAIA,QAAK,YAAL,GAAoB,IAApB,EAA0B,KAA1B;;AAEA,QAAK,GAAL,CAAS,IAAT;;AAEA,UAAO,KAAK,GAAZ;AACA;;;yBAEO,G,EAAK;AACZ,OAAI,aAAa,KAAK,aAAL,EAAjB;;;;AAIA,OACC,IAAI,UAAJ,GAAiB,KAAK,UAAtB,IACA,IAAI,UAAJ,GAAiB,KAAK,UADtB,IAEA,IAAI,cAAJ,GAAqB,KAAK,SAAL,CAAe,OAAf,CAAuB,MAH7C,EAIE;AACD,QAAI,IAAI,cAAJ,GAAqB,KAAK,SAAL,CAAe,OAAf,CAAuB,MAAhD,EAAwD;AACvD,UAAK,SAAL,CAAe,MAAf,CAAsB,IAAI,cAAJ,GAAqB,KAAK,SAAL,CAAe,OAAf,CAAuB,MAAlE;AACA;;AAED,SAAK,KAAL;AACA,SAAK,UAAL,GAAkB,KAAK,UAAL,GAAkB,IAAI,UAAxC;AACA,QAAI,UAAJ,GAAiB,CAAjB;AACA;;AAED,OAAI,IAAI,UAAJ,GAAiB,CAAC,CAAtB,EAAyB;;AAExB,WAAO,KAAK,UAAL,GAAkB,IAAI,UAA7B,EAAyC;AACxC,UAAK,UAAL;AACA,SAAI,MAAM,KAAK,UAAf;AACA,SAAI,MAAM,KAAK,cAAL,CAAoB,CAApB,EAAuB,GAAvB,CAAV;AACA,SAAI,GAAJ,CAAQ,WAAR,EAAqB,gBAAkB,GAAD,GAAQ,IAAI,IAA7B,GAAqC,KAA1D;AACA;AACD,SAAK,UAAL,GAAkB,KAAK,GAAL,CAAS,KAAK,UAAL,GAAkB,IAAI,cAA/B,EAA+C,KAAK,UAApD,CAAlB;AACA,IATD,MASO;;AAEN,WAAO,KAAK,UAAL,GAAkB,IAAI,UAA7B,EAAyC;AACxC,SAAI,OAAM,KAAK,UAAf;AACA,UAAK,UAAL;AACA,SAAI,OAAM,KAAK,cAAL,CAAoB,CAAC,CAArB,EAAwB,IAAxB,CAAV;AACA,UAAI,GAAJ,CAAQ,WAAR,EAAqB,gBAAkB,IAAD,GAAQ,IAAI,IAA7B,GAAqC,KAA1D;AACA;AACD,SAAK,UAAL,GAAkB,KAAK,GAAL,CAAS,KAAK,UAAd,EAA0B,KAAK,UAAL,GAAkB,IAAI,cAAhD,CAAlB;AACA;AACD;;;;;;kBA3EmB,gB;;;;;;;;;kBCFN;AACd,iBAAsB,qBAAC,CAAD;AAAA,SAAQ,6BAAD,CAA+B,IAA/B,CAAoC,EAAE,SAAtC;AAAP;AAAA,EADR;AAEd,sBAAsB,yBAAC,CAAD;AAAA,SAAQ,0BAAD,CAA4B,IAA5B,CAAiC,EAAE,SAAnC;AAAP;AAAA,EAFR;AAGd,oBAAsB,uBAAC,CAAD;AAAA,SAAQ,wBAAD,CAA0B,IAA1B,CAA+B,EAAE,SAAjC;AAAP;AAAA,EAHR;AAId,eAAsB,mBAAC,CAAD;AAAA,SAAQ,oBAAD,CAAsB,IAAtB,CAA2B,EAAE,SAA7B;AAAP;AAAA,EAJR;AAKd,aAAsB,iBAAC,CAAD;AAAA,SAAO,EAAE,YAAF,CAAe,cAAf,CAAP;AAAA,EALR;AAMd,WAAsB,eAAC,CAAD;AAAA,SAAO,EAAE,YAAF,CAAe,YAAf,CAAP;AAAA,EANR;AAOd,eAAsB,mBAAC,CAAD;AAAA,SAAO,EAAE,YAAF,CAAe,gBAAf,CAAP;AAAA,EAPR;AAQd,iBAAsB,qBAAC,CAAD;AAAA,SAAO,EAAE,YAAF,CAAe,kBAAf,CAAP;AAAA,EARR;AASd,gBAAsB,qBAAC,CAAD;AAAA,SAAO,EAAE,CAAF,EAAK,QAAL,CAAc,aAAd,KAAgC,EAAE,CAAF,EAAK,IAAL,CAAU,aAAV,CAAvC;AAAA;AATR,C;;;;;;;;;kBCAA;AACd,UAAS,kBAAU,CAAV,EAAa,CAAb,EAAgB;AACxB,MAAI,EAAJ;MAAQ,EAAR;MACA,IAAI,CADJ;MAEA,KAAK,cAFL;MAGA,KAAK,IAHL;MAIA,CAJA;;AAMA,MAAI,SAAS,CAAT,KAAe,SAAS,CAAT,CAAnB,EAAgC;AAC/B,UAAO,IAAI,CAAX;AACA;;AAED,MAAI,OAAO,CAAP,EAAU,WAAV,EAAJ;AACA,MAAI,OAAO,CAAP,EAAU,WAAV,EAAJ;AACA,MAAI,MAAM,CAAV,EAAa;AACZ,UAAO,CAAP;AACA;AACD,MAAI,EAAE,GAAG,IAAH,CAAQ,CAAR,KAAc,GAAG,IAAH,CAAQ,CAAR,CAAhB,CAAJ,EAAiC;AAChC,UAAO,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAApB;AACA;;AAED,MAAI,EAAE,KAAF,CAAQ,EAAR,CAAJ;AACA,MAAI,EAAE,KAAF,CAAQ,EAAR,CAAJ;AACA,MAAI,EAAE,MAAF,GAAW,EAAE,MAAb,GAAsB,EAAE,MAAxB,GAAiC,EAAE,MAAvC;AACA,SAAO,IAAI,CAAX,EAAc;AACb,QAAK,EAAE,CAAF,CAAL;AACA,QAAK,EAAE,CAAF,CAAL;AACA,OAAI,IAAI,CAAR;AACA,OAAI,OAAO,EAAX,EAAe;AACd,QAAI,SAAS,EAAT,KAAgB,SAAS,EAAT,CAApB,EAAkC;AACjC,SAAI,GAAG,MAAH,CAAU,CAAV,MAAiB,GAArB,EAA0B;AACzB,WAAK,MAAM,EAAX;AACA;AACD,SAAI,GAAG,MAAH,CAAU,CAAV,MAAiB,GAArB,EAA0B;AACzB,WAAK,MAAM,EAAX;AACA;AACD,YAAQ,KAAK,EAAb;AACA;AACD,WAAO,KAAK,EAAL,GAAU,CAAV,GAAc,CAAC,CAAtB;AACA;AACD;AACD,SAAO,EAAE,MAAF,GAAW,EAAE,MAApB;AACA,EA1Ca;;AA4Cd,aAAY,oBAAU,CAAV,EAAa,CAAb,EAAgB;;AAE3B,MAAI,EAAE,OAAF,CAAU,KAAV,EAAiB,EAAjB,EAAqB,OAArB,CAA6B,OAA7B,EAAsC,EAAtC,CAAJ;AACA,MAAI,EAAE,OAAF,CAAU,KAAV,EAAiB,EAAjB,EAAqB,OAArB,CAA6B,OAA7B,EAAsC,EAAtC,CAAJ;;AAEA,MAAI,KAAK,CAAT;AACA,MAAI,KAAK,CAAT;;AAEA,SAAQ,IAAI,CAAZ;AACA,EArDa;;AAuDd,KAAI,YAAU,CAAV,EAAa,CAAb,EAAgB;AACnB,MAAI,KAAK,EAAE,KAAF,CAAQ,GAAR,CAAT;MACA,KAAK,EAAE,KAAF,CAAQ,GAAR,CADL;MAEA,IAAI,KAAK,GAAL,CAAS,GAAG,MAAZ,EAAoB,GAAG,MAAvB,CAFJ;MAGA,CAHA;MAIA,CAJA;;AAMA,OAAK,IAAI,CAAT,EAAY,IAAI,CAAhB,EAAmB,IAAI,IAAI,CAA3B,EAA8B;AAC7B,OAAI,GAAG,CAAH,IAAQ,GAAG,CAAH,CAAZ;AACA,OAAI,MAAM,CAAV,EAAa;AACZ,WAAO,CAAP;AACA;AACD;AACD,SAAO,CAAP;AACA,EArEa;;AAuEd,SAAQ,gBAAU,CAAV,EAAa,CAAb,EAAgB;AACvB,MAAI,cAAJ;MACA,KAAK,EAAE,KAAF,CAAQ,GAAR,CADL;;AAEA,OAAK,EAAE,KAAF,CAAQ,GAAR,CAFL;MAGA,SAAS,SAAS,GAAG,CAAH,CAAT,EAAgB,EAAhB,CAHT;MAIA,SAAS,SAAS,GAAG,CAAH,CAAT,EAAgB,EAAhB,CAJT;;AAMA,SAAQ,WAAW,MAAZ,GAAsB,EAAE,IAAF,CAAO,WAAP,CAAmB,WAAnB,CAA+B,EAA/B,CAAkC,GAAG,CAAH,CAAlC,EAAyC,GAAG,CAAH,CAAzC,CAAtB,GAAyE,SAAS,MAAzF;AACA,EA/Ea;;AAiFd,SAAQ,gBAAU,CAAV,EAAa,CAAb,EAAgB;AACvB,SAAO,IAAI,CAAJ,GAAQ,CAAC,CAAT,GAAa,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAhC;AACA;AAnFa,C;;;;;;;;;;;;;;;;ACCf,IAAI,gBAAgB,IAAI,GAAJ,EAApB;IACC,aAAa,KADd;IAEC,cAAc,EAAE,QAAF,CAAW,MAAX,EAAmB,CAAnB,CAFf;;AAKA,SAAS,iBAAT,CAA2B,QAA3B,EAAqC,GAArC,EAA0C;AACzC,KAAI,QAAQ,CAAZ;AADyC;AAAA;AAAA;;AAAA;AAEzC,uBAAe,QAAf,8HAAyB;AAAA,OAAhB,EAAgB;;AACxB,OAAI,IAAI,GAAG,GAAH,GAAS,KAAjB;AACA,OAAI,IAAI,GAAG,MAAX;AACA,OAAI,aAAa,GAAG,IAAH,IAAW,KAAK,GAAL,CAAS,CAAT,EAAY,GAAG,IAAH,CAAQ,GAAR,GAAc,CAAd,GAAkB,IAAI,IAAlC,CAAX,IAAsD,CAAvE;;AAEA,OAAI,GAAG,QAAH,IAAe,IAAI,IAAI,IAAvB,IAA+B,aAAa,CAAC,CAAjD,EAAoD;AACnD,OAAG,IAAH;AACA,IAFD,MAEO,IAAI,CAAC,GAAG,QAAJ,IAAgB,IAAI,IAAI,IAA5B,EAAkC;AACxC,OAAG,KAAH;AACA;AACD,YAAS,GAAG,MAAH,CAAU,QAAQ,UAAlB,CAAT;AACA;AAbwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAczC;;AAED,SAAS,oBAAT,CAA8B,QAA9B,EAAwC,GAAxC,EAA6C;AAC5C,KAAI,QAAQ,EAAZ,C;AAD4C;AAAA;AAAA;;AAAA;AAE5C,wBAAe,QAAf,mIAAyB;AAAA,OAAhB,EAAgB;;AACxB,OAAI,IAAI,GAAG,MAAH,GAAY,KAApB;AACA,OAAI,IAAI,GAAG,MAAX;AACA,OAAI,aAAa,GAAG,IAAH,IAAW,KAAK,GAAL,CAAS,CAAT,EAAY,GAAG,IAAH,CAAQ,MAAR,GAAiB,CAAjB,GAAqB,IAAI,IAArC,CAAX,IAAyD,CAA1E;;AAEA,OAAI,GAAG,QAAH,IAAe,IAAI,IAAI,IAAvB,IAA+B,aAAa,CAAhD,EAAmD;AAClD,OAAG,IAAH;AACA,IAFD,MAEO,IAAI,CAAC,GAAG,QAAJ,IAAgB,IAAI,IAAI,IAA5B,EAAkC;AACxC,OAAG,KAAH;AACA;AACD,YAAS,GAAG,MAAH,CAAU,QAAQ,UAAlB,CAAT;AACA;AAb2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc5C;;AAED,SAAS,MAAT,GAAkB;AACjB,KAAI,UAAU,EAAE,MAAF,EAAU,SAAV,EAAd;AACA,KAAI,UAAU,EAAE,MAAF,EAAU,WAAV,EAAd;;;;;;AAMA,YAAW,EAAX;;AAEA,KAAI,MAAM;AACT,QAAM,UAAU,OADP;AAET,QAAM;AAFG,EAAV;;AAViB;AAAA;AAAA;;AAAA;AAejB,wBAAmC,aAAnC,mIAAkD;AAAA;;AAAA,OAAxC,SAAwC;AAAA,OAA7B,SAA6B;AAAA;AAAA;AAAA;;AAAA;AACjD,0BAAmC,SAAnC,mIAA8C;AAAA;;AAAA,SAApC,UAAoC;AAAA,SAAxB,QAAwB;;AAC7C,SAAI,eAAe,KAAnB,EAA0B;AACzB,wBAAkB,QAAlB,EAA4B,GAA5B;AACA,MAFD,MAEO;AACN,2BAAqB,QAArB,EAA+B,GAA/B;AACA;AACD;AAPgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQjD;AAvBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBjB;;AAGD,SAAS,MAAT,GAAkB;AACjB,KAAI,CAAC,UAAL,EAAiB;AAChB,IAAE,MAAF,EAAU,EAAV,CAAa,uCAAb,EAAsD,MAAtD;AACA,eAAa,IAAb;AACA;AACD;;AAED,SAAS,OAAT,GAAmB;AAClB,GAAE,MAAF,EAAU,GAAV,CAAc,cAAd;AACA,cAAa,KAAb;AACA;;IAEoB,W;AACpB,sBAAa,OAAb,EAAsB,KAAtB,EAA6B,UAA7B,EAAyC;AAAA;;AACxC,MAAI,GAAJ;;AAEA,MAAI,eAAe,KAAf,IAAwB,eAAe,QAA3C,EAAqD;AACpD,SAAM,MAAM,0DAAN,CAAN;AACA;;AAED,OAAK,GAAL,GAAW,MAAM,EAAE,OAAF,CAAjB;AACA,OAAK,KAAL,GAAa,QAAS,SAAS,SAA/B;AACA,OAAK,UAAL,GAAkB,UAAlB;AACA,OAAK,QAAL,GAAgB,KAAhB;;AAEA,OAAK,GAAL,CAAS,IAAT,CAAc,aAAd,EAA6B,IAA7B;;AAEA,MAAI,kBAAJ;AACA,MAAI,cAAc,GAAd,CAAkB,KAAlB,CAAJ,EAA8B;AAC7B,eAAY,cAAc,GAAd,CAAkB,KAAlB,CAAZ;AACA,GAFD,MAEO;AACN,eAAY,IAAI,GAAJ,CAAQ,CAAC,CAAC,KAAD,EAAQ,EAAR,CAAD,EAAc,CAAC,QAAD,EAAW,EAAX,CAAd,CAAR,CAAZ;AACA,iBAAc,GAAd,CAAkB,KAAlB,EAAyB,SAAzB;AACA;;AAED,MAAI,WAAW,UAAU,GAAV,CAAc,UAAd,CAAf;;AAEA,WAAS,IAAT,CAAc,IAAd;;;AAGA,MAAI,eAAe,KAAnB,EAA0B;AACzB,YAAS,IAAT,CAAc,UAAC,CAAD,EAAI,CAAJ;AAAA,WAAU,EAAE,GAAF,GAAQ,EAAE,GAApB;AAAA,IAAd;AACA,GAFD,MAEO;AACN,YAAS,IAAT,CAAc,UAAC,CAAD,EAAI,CAAJ;AAAA,WAAU,EAAE,GAAF,GAAQ,EAAE,GAApB;AAAA,IAAd;AACA;;AAED;AACA;;;;uBAcK,K,EAAO;AACZ,QAAK,IAAL,GAAY,KAAZ;AACA,SAAM,IAAN,GAAa,IAAb;AACA;;;2BAES;AACT,OAAI,QAAQ,cAAc,KAAK,KAAnB,CAAZ;AACA,SAAM,MAAN,CAAa,MAAM,OAAN,CAAc,IAAd,CAAb,EAAkC,CAAlC;AACA,QAAK,GAAL,CAAS,IAAT,CAAc,aAAd,EAA6B,SAA7B;AACA;;;0BAEQ;AACR,OAAI,MAAM,KAAK,GAAf;OACC,UAAU,KAAK,GAAL,CAAS,MAAT,EADX;OAEC,SAFD;OAGC,UAHD;OAIC,cAJD;;AAMA,OAAI,CAAC,KAAK,QAAV,EAAoB;;AAEnB,QAAI,aAAa,KAAK,UAAtB;;AAEA,gBAAY,IAAI,UAAJ,EAAZ;AACA,iBAAa,IAAI,WAAJ,EAAb;;AAGA,QAAI,WAAW,4BAA0B,UAA1B,UAAf,C;AACA,QAAI,eAAe,EAAE,uBAAF,EAA2B,WAA3B,CAAuC,UAAvC,CAAnB;;AAGA,iBAAa,WAAb,CAAyB,GAAzB;AACA,QAAI,MAAJ;AACA,aAAS,MAAT,CAAgB,GAAhB;AACA,YAAQ,MAAR,CAAe,QAAf;;AAEA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,QAAL,GAAgB,IAAhB;AACA;AACD;;;yBAEO;AACP,OAAI,KAAK,QAAT,EAAmB;AAClB,QAAI,WAAW,KAAK,QAApB;AACA,QAAI,eAAe,KAAK,YAAxB;AACA,QAAI,MAAM,KAAK,GAAf;;AAEA,aAAS,MAAT;AACA,QAAI,MAAJ;AACA,QAAI,WAAJ,CAAgB,YAAhB;AACA,iBAAa,MAAb;;AAEA,SAAK,QAAL,GAAgB,KAAhB;AACA;AACD;;;yBAEO,M,EAAQ;AACf,OAAI,KAAK,QAAT,EAAmB;AAClB,QAAI,KAAK,WAAL,KAAqB,MAAzB,EAAiC;AAChC,UAAK,WAAL,GAAmB,MAAnB;;AAEA,SAAI,KAAK,UAAL,KAAoB,KAAxB,EAA+B;AAC9B,WAAK,QAAL,CAAc,GAAd,CAAkB,EAAE,KAAK,SAAS,IAAhB,EAAlB;AACA,MAFD,MAEO;AACN,WAAK,QAAL,CAAc,GAAd,CAAkB,EAAE,QAAQ,SAAS,IAAnB,EAAlB;AACA;AACD;;AAED,WAAO,KAAK,QAAL,CAAc,WAAd,EAAP;AAEA,IAbD,MAaO;AACN,SAAK,WAAL,GAAmB,IAAnB;AACA;;AAED,UAAO,CAAP;AACA;;;sBAvFa;AACb,UAAO,KAAK,GAAL,CAAS,WAAT,EAAP;AACA;;;sBAEU;AACV,UAAQ,KAAK,QAAN,GAAkB,KAAK,YAAL,CAAkB,MAAlB,GAA2B,GAA7C,GAAmD,KAAK,GAAL,CAAS,MAAT,GAAkB,GAA5E;AACA;;;sBAEa;AACb,UAAO,KAAK,MAAL,GAAc,KAAK,GAA1B;AACA;;;;;;kBA/CmB,W;;;AA+HrB,YAAY,MAAZ,GAAqB,MAArB;AACA,YAAY,OAAZ,GAAsB,OAAtB;;;;;;;;;;;;;;kBCnLwB,e;;AA1BxB;;;;;;;;AACA,IAAI,OAAO,CAAP,KAAa,WAAjB,EAA8B;AAC7B,GAAE,MAAF,CAAS,EAAE,IAAF,CAAO,GAAP,CAAT;AACA;;AAED,IAAI,SAAU,YAAM;AACnB,KAAI,IAAI,CAAR;AACA,QAAO,YAAM;AACZ,SAAO,SAAS,CAAC,GAAD,EAAM,QAAN,CAAe,EAAf,CAAhB;AACA,EAFD;AAGA,CALY,EAAb;;;;;;AAWA,SAAS,QAAT,CAAkB,CAAlB,EAAqB;AACpB,QAAQ,OAAO,CAAP,KAAc,SAAd,GACP,CADO,GACH,QAAQ,CAAR,KAAc,EACjB,EAAE,MAAF,KAAa,CAAb,IACA,EAAE,CAAF,MAAS,GADT,IAEA,EAAE,CAAF,MAAS,GAFT,IAGA,MAAM,GAJW,CADnB;AAOA;;AAEc,SAAS,eAAT,CAA0B,QAA1B,EAAoC,OAApC,EAA6C;AAC3D,KAAI,YAAY,EAAE,QAAF,EAAY,GAAZ,CAAgB,OAAhB,CAAhB;;AAEA,KAAI,UAAU,MAAV,GAAmB,CAAvB,EAA0B;AACzB,QAAM,sCAAoC,QAAQ,IAA5C,uCAAN;AACA;;;AAGD,KAAI,QAAQ,YAAZ,EAA0B;AACzB,MAAI,QAAQ,IAAR,KAAiB,QAArB,EAA+B;AAC9B,aAAU,OAAV,CACC,sHADD;AAGA,GAJD,MAIO,IAAI,QAAQ,IAAR,KAAiB,OAArB,EAA8B;AACpC,aAAU,OAAV,CAAkB,uEAAlB;AACA;AACD;;;AAGD,KAAI,cAAc,cAAlB;AACA,KAAI,eAAe,UAAU,IAAV,CAAe,WAAf,CAAnB;;AAEA,KAAI,WAAW,EAAf;AACA,KAAI,MAAM,SAAS,GAAT,GAAe,EAAzB;AACA,KAAI,MAAM,SAAS,GAAT,GAAe,EAAzB;AACA,KAAI,UAAU,SAAS,OAAT,GAAmB,EAAjC;;AAEA,GAAE,YAAF,EAAgB,IAAhB,CAAqB,UAAC,CAAD,EAAI,CAAJ,EAAU;AAC9B,MAAI,KAAK,EAAE,CAAF,CAAT;AACA,MAAI,oBAAJ;;;;;AAKA,MAAI,QAAQ,cAAc,GAAG,IAAH,CAAQ,YAAR,CAAtB,MAAiD,WAArD,EAAkE;AACjE,MAAG,IAAH,CAAQ,YAAR,EAAuB,cAAc,QAArC;AACA;;;;AAID,MAAI,eAAJ;AACA,MAAI,GAAG,EAAH,CAAM,kBAAN,CAAJ,EAA+B;AAC9B,YAAS,gBAAC,CAAD;AAAA,sCAAO,CAAP;AAAO,MAAP;AAAA;;AAAA,WAAa,EAAE,IAAF,WAAO,SAAP,SAAqB,CAArB,EAAb;AAAA,IAAT;AACA,GAFD,MAEO,IAAI,GAAG,EAAH,CAAM,QAAN,CAAJ,EAAqB;AAC3B,YAAS,gBAAC,CAAD;AAAA,uCAAO,CAAP;AAAO,MAAP;AAAA;;AAAA,WAAa,EAAE,GAAF,UAAS,CAAT,CAAb;AAAA,IAAT;AACA,GAFM,MAEA;AACN,YAAS,gBAAC,CAAD;AAAA,uCAAO,CAAP;AAAO,MAAP;AAAA;;AAAA,WAAa,EAAE,IAAF,UAAU,CAAV,CAAb;AAAA,IAAT;AACA;;AAED,UAAQ,WAAR,IAAuB,MAAvB;;;;;AAtB8B;AAAA;AAAA;;AAAA;AA2B9B,wBAAiB,GAAG,IAAH,CAAQ,cAAR,EAAwB,KAAxB,CAA8B,cAA9B,CAAjB,8HAAgE;AAAA,QAAvD,IAAuD;;AAAA,sBACtB,KAAK,KAAL,CAAW,WAAX,CADsB;;AAAA;;AAAA,QAC1D,UAD0D;AAAA,QAC9C,SAD8C;AAAA,QACnC,SADmC;;;AAG/D,gBAAY,aAAa,GAAzB;;;AAGA,QAAI,cAAc,GAAd,IAAqB,cAAc,GAAvC,EAA4C;AAC3C,SAAI,SAAJ,IAAiB,IAAI,SAAJ,KAAkB,EAAnC;AACA,SAAI,SAAJ,EAAe,IAAf,CAAoB,WAApB;AACA;;;AAGD,QAAI,cAAc,GAAd,IAAqB,cAAc,GAAvC,EAA4C;AAC3C,SAAI,WAAJ,IAAmB,IAAI,WAAJ,KAAoB,EAAvC;AACA,SAAI,WAAJ,EAAiB,IAAjB,CAAsB,SAAtB;AACA;AACD;AA3C6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4C9B,EA5CD;;AA8CA,KAAI,SAAS,SAAT,MAAS,CAAC,KAAD;AAAA,SAAW,IAAI,kBAAJ,CAAwB,SAAxB,EAAmC,QAAnC,EAA6C,KAA7C,EAAoD,OAApD,CAAX;AAAA,EAAb;;;AAGA,QAAO,QAAP,GAAkB,QAAlB;AACA,QAAO,QAAP,GAAkB,QAAlB;;;AAGA,QAAO,MAAP;AACA;;IAGK,kB;AACL,6BAAa,SAAb,EAAwB,QAAxB,EAAkC,KAAlC,EAAyC,OAAzC,EAAkD;AAAA;;AAAA;;AACjD,OAAK,GAAL,GAAW,UAAU,KAAV,EAAX;;AAEA,OAAK,QAAL,GAAgB,QAAhB;AACA,OAAK,YAAL,GAAoB,QAAQ,YAA5B;AACA,OAAK,YAAL,GAAoB,QAAQ,YAA5B;AACA,OAAK,QAAL,GAAgB,QAAQ,QAAxB;AACA,OAAK,WAAL,GAAmB,QAAQ,WAA3B;;AAEA,OAAK,GAAL,CAAS,EAAT,CAAY,QAAZ,EAAsB,UAAC,CAAD,EAAO;;;AAG5B,OAAI,MAAM,MAAK,QAAL,CAAc,GAAxB;AACA,OAAI,UAAU,EAAE,EAAE,MAAJ,CAAd;AACA,OAAI,OAAO,QAAQ,IAAR,CAAa,YAAb,CAAX;AACA,OAAI,QAAQ,MAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,EAA4B,OAA5B,CAAZ;AACA,OAAI,UAAU,EAAd;;AAEA,OAAI,IAAI,cAAJ,CAAmB,IAAnB,CAAJ,EAA8B;AAC7B,MAAE,IAAF,CAAO,IAAI,IAAJ,CAAP,EAAkB,UAAU,MAAV,EAAkB;AACnC,aAAQ,MAAR,IAAkB,KAAlB;AACA,KAFD;AAGA,UAAK,KAAL,CAAW,GAAX,CAAe,OAAf;AACA;AACD,GAfD;;;AAkBA,MAAI,aAAa,IAAI,GAAJ,EAAjB,C;AACA,IAAE,IAAF,CAAO,EAAE,KAAF,CAAQ,KAAK,QAAL,CAAc,GAAtB,CAAP,EAAmC,gBAAqB;AAAA;;AAAA,OAAnB,MAAmB;AAAA,OAAX,KAAW;;AACvD,KAAE,IAAF,CAAO,KAAP,EAAc,UAAC,IAAD,EAAU;AACvB,QAAI,CAAC,WAAW,cAAX,CAA0B,IAA1B,CAAL,EAAsC;AACrC,gBAAW,GAAX,CAAe,IAAf,EAAqB,MAAK,GAAL,CAAS,IAAT,mBAA8B,IAA9B,QAArB;AACA;AACD,IAJD;AAKA,GAND;;AAQA,OAAK,UAAL,GAAkB,UAAlB;AACA;;;;wCAEsB,O,EAAS;AAAA;;AAC/B,OAAI,WAAW,KAAK,QAApB;OACC,MAAM,SAAS,GADhB;OAEC,gBAAgB,KAAK,YAAL,CAAkB,KAAK,KAAL,CAAW,GAA7B,CAFjB;OAGC,CAHD;;;AAMA,OAAI,OAAJ,EAAa;AACZ,SAAK,IAAI,CAAT,EAAY,IAAI,QAAQ,MAAxB,EAAgC,GAAhC,EAAqC;AACpC,SAAI,QAAQ,QAAQ,CAAR,CAAZ;AACA,SAAI,UAAU,iBAAiB,cAAc,QAAQ,CAAR,CAAd,CAAjB,IAA8C,SAA5D;;AAFoC;AAAA;AAAA;;AAAA;AAIpC,4BAAsB,IAAI,KAAJ,CAAtB,mIAAkC;AAAA,WAAzB,SAAyB;;AACjC,WAAI,WAAW,KAAK,UAAL,CAAgB,GAAhB,CAAoB,SAApB,CAAf;;AAEA,gBACE,IADF,CACO,gBADP,EACyB,OADzB,EAEE,WAFF,CAEc,gBAFd,EAEgC,OAAO,OAAP,KAAmB,QAFnD;AAIA;AAXmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYpC;AACD,W;AACA;;;AAtB8B;AAAA;AAAA;;AAAA;AAyB/B,0BAAkC,KAAK,UAAvC,mIAAmD;AAAA;;AAAA,SAAzC,WAAyC;AAAA,SAA9B,UAA8B;;AAClD,gBAAS,WAAT,CAAqB,gBAArB;AACA;;;AA3B8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8B/B,OAAI,aAAJ,EAAmB;AAClB,MAAE,IAAF,CAAO,EAAE,KAAF,CAAQ,aAAR,CAAP,EAA+B,iBAAuB;AAAA;;AAAA,SAArB,KAAqB;AAAA,SAAd,QAAc;AAAA;AAAA;AAAA;;AAAA;AACrD,4BAAsB,IAAI,KAAJ,CAAtB,mIAAkC;AAAA,WAAzB,UAAyB;;AACjC,WAAI,YAAW,OAAK,UAAL,CAAgB,GAAhB,CAAoB,UAApB,CAAf;;AAEA,WAAI,UAAS,EAAT,CAAY,UAAZ,CAAJ,EAA6B;AAC5B,kBACE,IADF,CACO,gBADP,EACyB,QADzB,EAEE,QAFF,CAEW,gBAFX;AAGA;AACD;AAToD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUrD,KAVD;AAWA;AACD;;;0CAEwB,O,EAAS;AACjC,OAAI,WAAW,KAAK,QAApB;OACC,MAAM,SAAS,GADhB;OAEC,gBAAgB,KAAK,YAAL,CAAkB,KAAK,KAAL,CAAW,GAA7B,CAFjB;OAGC,CAHD;;AADiC;AAAA;AAAA;;AAAA;AAMjC,0BAAkC,KAAK,UAAvC,mIAAmD;AAAA;;AAAA,SAAzC,WAAyC;AAAA,SAA9B,UAA8B;;AAClD,gBAAS,WAAT,CAAqB,mBAArB;AACA;AARgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUjC,OAAI,aAAJ,EAAmB;AAAA;AAAA;AAAA;;AAAA;AAClB,2BAAkB,aAAlB,mIAAiC;AAAA,UAAxB,KAAwB;AAAA;AAAA;AAAA;;AAAA;AAChC,6BAAsB,IAAI,KAAJ,CAAtB,mIAAkC;AAAA,YAAzB,SAAyB;;AACjC,YAAI,WAAW,KAAK,UAAL,CAAgB,GAAhB,CAAoB,SAApB,CAAf;AACA,iBAAS,QAAT,CAAkB,mBAAlB;AACA;AAJ+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKhC;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlB;AACD;;;2BAES,K,EAAO,K,EAAO;AAAA;;AACvB,OAAI,KAAK,KAAT,EAAgB;AACf,SAAK,aAAL;AACA;;AAED,QAAK,KAAL,GAAa,KAAb;AACA,QAAK,GAAL,CACE,IADF,CACO,gBADP,EACyB,MAAM,GAD/B,C;AAAA,IAEE,IAFF,CAEO,aAFP,EAEsB,IAFtB,C;AAAA,IAGE,WAHF,CAGc,UAHd,EAG0B,KAAK,QAAL,CAAc,MAAM,GAApB,CAH1B,C;AAAA,IAIE,GAJF,CAIM,QAJN,EAIiB,KAAK,WAAL,KAAqB,CAAtB,GAA2B,IAJ3C,C;AAAA;;AAOA,QAAK,QAAL,CAAc,KAAd,EAAqB,QAArB,EAA+B,UAAC,MAAD,EAAY;AAC1C,WAAK,QAAL,CAAc,IAAd,EAAoB,KAApB;AACA,IAFD;;AAIA,KAAE,KAAF,CAAQ;AAAA,WAAM,OAAK,qBAAL,EAAN;AAAA,IAAR;AACA,QAAK,uBAAL;;AAEA,QAAK,QAAL,CAAc,IAAd,EAAoB,KAApB;AACA;;;2BAES,K,EAAO,K,EAAO;AAAA;;;AAGvB,WAAQ,SAAS,EAAE,IAAF,CAAO,KAAK,QAAL,CAAc,GAArB,CAAjB;AACA,OAAI,OAAO,EAAE,MAAF,CAAS,KAAK,KAAL,CAAW,MAAX,EAAT,EAA8B,KAA9B,CAAX;AACA,OAAI,MAAM,KAAK,QAAL,CAAc,GAAxB;AACA,OAAI,UAAU,KAAK,QAAL,CAAc,OAA5B;;AAEA,KAAE,IAAF,CAAO,KAAP,EAAc,UAAC,IAAD,EAAU;AACvB,MAAE,IAAF,CAAO,IAAI,IAAJ,CAAP,EAAkB,UAAC,IAAD,EAAU;;AAE3B,SAAI,SAAS,QAAQ,IAAR,CAAb;AACA,YAAO,OAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,CAAP,EAAkC,KAAK,IAAL,CAAlC;AACA,KAJD;AAKA,IAND;AAOA;;;6BAEW,S,EAAW;AACtB,OAAI,SAAS,KAAK,QAAL,CAAc,GAAd,CAAkB,SAAlB,CAAb;;AADsB;AAAA;AAAA;;AAAA;AAGtB,0BAAkB,MAAlB,mIAA0B;AAAA,SAAjB,KAAiB;;AACzB,SAAI,QAAQ,KAAK,UAAL,CAAgB,GAAhB,CAAoB,KAApB,CAAZ;AACA,SAAI,SAAS,MAAM,EAAN,CAAS,UAAT,CAAb,EAAmC;AAClC,YAAM,KAAN;AACA;AACA;AACD;AATqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUtB;;;;;;AAGF,OAAO,MAAP,CAAc,mBAAmB,SAAjC,EAA4C,SAAS,MAArD","file":"configtable2.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export function duplicates(collection, fields) {\n\tvar seens = new Map(),\n\t\tsignature = (m, fields) => fields.map((f) => m.get(f)).join('-')\n\t\t;\n\n\tfor (let model of collection.models) {\n\t\tlet sig = signature(model, fields),\n\t\t\tseen = seens.get(sig);\n\n\t\tif (seen) {\n\t\t\tseen.push(model);\n\t\t} else {\n\t\t\tseens.set(sig, [model]);\n\t\t}\n\t}\n\n\tlet duplicates = [];\n\tfor (let [key, value] of seens) {\n\t\tif (value.length > 1) {\n\t\t\tduplicates.push(value);\n\t\t}\n\t}\n\n\treturn duplicates;\n}\n","import Draggable from './draggable';\nimport EntryViewManager from './entryviewmanager';\nimport ConstraintManager from './constraintmanager';\nimport SortMethods from './sortmethods';\nimport StickyFloat from './stickyfloat';\nimport compileTemplate from './template-builder';\nimport diff from './diff';\n\nStickyFloat.enable();\n\nconst ConfigTableDataName = 'configtable',\n\tdefaultLoadingTemplate = _.template(''); /*_.template(\n\t\t'<div class=\"loading\"></span>Loading... <%= progress %>%<span class=\"bar\" style=\"width: <%= progress %>%\"></div>'\n\t\t);*/\n\nvar _registry = new Set(),\n\t_listening = false;\n\nfunction update() {\n\tlet dim = {\n\t\twindowY: $(window).scrollTop(),\n\t\twindowH: $(window).innerHeight()\n\t};\n\n\tfor (let ct of _registry) {\n\t\tct.updateViewableArea(dim);\n\t}\n}\n\nfunction enable() {\n\tif (!_listening) {\n\t\t_listening = true;\n\t\t$(window)\n\t\t\t.on('scroll.configtable resize.configtable', update)\n\t\t\t.on('click.configtable', focusCheck)\n\t\t\t;\n\t}\n}\n\nfunction disable() {\n\t$(window).off('.configtable');\n\t_listening = false;\n}\n\nfunction register(configtable) {\n\t_registry.add(configtable);\n\tif (!_listening) {\n\t\tenable();\n\t}\n}\n\nfunction unregister(configtable) {\n\t_registry.delete(configtable);\n\tif (_registry.length === 0) {\n\t\tdisable();\n\t}\n}\n\nfunction focusCheck(event) {\n\tlet $el = $(event.target).closest('.configtable'),\n\t\tmatch = $el.data('configtable');\n\n\tfor (let ct of _registry) {\n\t\tif (match !== ct) {\n\t\t\tct.focusEntry(null);\n\t\t}\n\t}\n}\n\nexport class ConfigTable {\n\tstatic checkOptions (options) {\n\t\tlet required = ['element', 'dataProvider'];\n\n\t\tfor (let prop of required) {\n\t\t\tif (typeof options[prop] === 'undefined') {\n\t\t\t\tthrow new Error(prop + ' option required');\n\t\t\t}\n\t\t}\n\t}\n\n\tconstructor (options) {\n\t\tConfigTable.checkOptions(options);\n\n\t\t// option: state\n\t\tthis.state = options.state || new Backbone.Model({\n\t\t\tmodified: false\n\t\t});\n\n\t\t// option: eventPrefix\n\t\tthis.eventPrefix = options.eventPrefix || 'configtable';\n\n\t\t// option: gridCount\n\t\tthis.gridCount = options.gridCount || 20;\n\n\t\t// option: element (css selector or dom element to use as root element)\n\t\tthis.$el = options.element = $(options.element);\n\t\tthis.$el.addClass('configtable');\n\n\t\tthis.validation = options.validation;\n\n\t\tthis.constrain = options.constrain || {};\n\n\t\t// option: model (or defaults)\n\t\t// This option is used to specify default values for new entries. You can\n\t\t// either provide a Backbone.Model class, or if an object is passed in, it\n\t\t// will be used to construct a new generic Backbone.Model with `defaults` set\n\t\t// to the passed-in object. Note that if the model needs to be altered at\n\t\t// instantiation, the `modelInit` option may be used (below).\n\t\toptions.model = options.model || options.defaults;\n\t\tif (options.model) {\n\t\t\tif (options.model instanceof Backbone.Model) {\n\t\t\t\tthis.Model = options.model;\n\t\t\t} else {\n\t\t\t\tthis.Model = Backbone.Model.extend({\n\t\t\t\t\tdefaults: options.model\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.Model = Backbone.Model;\n\t\t}\n\n\t\t// option: modelInit called during the \"append\" action, this function can\n\t\t// be overridden in order to provide the newly inserted entry with default\n\t\t// properties. Index is provided if the model is being appended after another\n\t\t// entry.\n\t\tthis.modelInit = (index) => {\n\t\t\treturn new this.Model();\n\t\t};\n\n\t\t// option: entryInit called within the context of the row, includes\n\t\t// the row element and model associated with row. This is called\n\t\t// when an element comes into view.\n\t\t//\n\t\t// It is advised not to alter the DOM if at all possible. Rather\n\t\t// than using jQuery's .on() for event interaction, you should use\n\t\t// Backbone's this.listenTo() since those are automatically unbound\n\t\t// after the row's DOM is reallocated. If you do alter DOM, realize\n\t\t// that the DOM will be reused, so be prepared to clean-up alterations\n\t\t// upon element reuse.\n\t\t//\n\t\t// Also try to avoid reading values from the DOM. Data bound via\n\t\t// data-ct-bind should be reflected within the passed in model and\n\t\t// pre-sanitized.\n\t\tthis.entryInit = (item, model) => {\n\t\t\tif (options.entryInit) {\n\t\t\t\toptions.entryInit.apply(item, [this, model]);\n\t\t\t}\n\t\t};\n\n\t\t// An element's height can be overridden, but in most cases the automatic\n\t\t// measurement should be sufficient.\n\t\tthis.forceEntryHeight = options.forceEntryHeight;\n\n\t\t// Allow re-ordering via drag-and-drop (this implies `showPosition`)\n\t\tthis.dragAndDrop = options.dragAndDrop || false;\n\n\t\t// Show row numbers along the left side\n\t\tthis.showPosition = this.dragAndDrop || options.showPosition || false;\n\n\t\t// Enable stickyfloat for header and footer.\n\t\t// If a string is provided, it will be used to denote which stickyfloat\n\t\t// group the header and footer will become a part of.\n\t\tthis.stickyFloat = options.stickyFloat || false;\n\n\t\t// Grid size should be set directly via CSS.\n\t\tif (options.gridCount) {\n\t\t\tconsole.log('Deprecated: configtable: specify grid-<n> in css rather than passing `gridCount`');\n\t\t\tthis.$el.addClass(`grid-${options.gridCount}`);\n\t\t}\n\n\t\t// This should return the horizontal top line of the *entry container*\n\t\t// element on the page. **THIS WILL BE BELOW THE HEADER**\n\t\tthis.getEntryContainerHorizontalOffset  = _.throttle(() => Math.round(this.container.$entry.offset().top), 0);\n\n\t\t// initialization\n\t\tthis.viewable = {min: -1, max: -1};\n\n\t\t// Permit loading indicator usage\n\t\tthis.isLoading = true;\n\n\t\t// Store active validation issues within a Map\n\t\t// Keys should correspond to model cid.\n\t\tthis.invalidations = new Map();\n\n\t\t// Models that have had modifications made dirty and should be redrawn ASAP\n\t\t//this.redraw = new Set();\n\n\t\t// Store field names (per-model) that have been\n\t\t// modified by the user.\n\t\tthis.modifications = new Map();\n\n\t\tthis.start = () => {\n\n\t\t\t// Begin initialization\n\t\t\tlet initCompleted = false,\n\t\t\t\tdataCompleted = false,\n\n\t\t\t\tcomplete = () => {\n\t\t\t\t\tif (initCompleted && dataCompleted) {\n\t\t\t\t\t\tlet postInit = () => {\n\t\t\t\t\t\t\tif (typeof options.onReady === 'function') {\n\t\t\t\t\t\t\t\toptions.onReady.apply(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.postInit();\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// If the element is currently not visible, then measurements\n\t\t\t\t\t\t// will fail horribly and nothing will work. This way we\n\t\t\t\t\t\t// postpone rendering until visible.\n\t\t\t\t\t\tif (this.$el.is(':visible')) {\n\t\t\t\t\t\t\tpostInit();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet interval = setInterval(() => {\n\t\t\t\t\t\t\t\tif (this.$el.is(':visible')) {\n\t\t\t\t\t\t\t\t\tpostInit();\n\t\t\t\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 200);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise we wait...\n\t\t\t\t};\n\n\t\t\tthis.initializeDataProviderAsync(options.dataProvider, (collection) => {\n\t\t\t\tthis.isLoading = false;\n\n\t\t\t\tif (!(collection instanceof Backbone.Collection)) {\n\t\t\t\t\tcollection = new Backbone.Collection(collection);\n\t\t\t\t}\n\n\t\t\t\tthis.collection = collection;\n\n\t\t\t\tif (this.constrain) {\n\t\t\t\t\tthis.constraintManager = new ConstraintManager(\n\t\t\t\t\t\tcollection,\n\t\t\t\t\t\tthis.constrain,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgetIndex: (model) => this.getOriginalModelIndex(model),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis.addDataListeners();\n\n\t\t\t\tthis.entryViewManager = new EntryViewManager({\n\t\t\t\t\tbuildEntry: (model) => this.templates.entry(model, {\n\t\t\t\t\t\t\tshowPosition: this.showPosition\n\t\t\t\t\t\t}),\n\t\t\t\t\tgetIndex: (model) => this.getOriginalModelIndex(model),\n\t\t\t\t\tgetEntryParentElement: () => this.container.$entries,\n\t\t\t\t\tgetCollection: () => this.collection,\n\t\t\t\t\tgetModelAt: (row) => this.getModelAt(row),\n\t\t\t\t\tgetEntryInit: () => this.entryInit,\n\t\t\t\t});\n\n\t\t\t\tthis.dimensions = {\n\t\t\t\t\tviewYMin: 0\n\t\t\t\t};\n\n\t\t\t\tdataCompleted = true;\n\n\t\t\t\t// Fork initial async validation processing\n\t\t\t\tthis.validate(() => {}, false);\n\n\t\t\t\tcomplete();\n\t\t\t});\n\n\t\t\tthis.initializeSubsystemsAsync(options, () => {\n\t\t\t\tinitCompleted = true;\n\t\t\t\tcomplete();\n\t\t\t});\n\n\t\t};\n\n\t\tif (options.autoStart !== false) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t// Subsystem initialization must not rely on the dataProvider!\n\tinitializeSubsystemsAsync (options, done) {\n\t\t// Attach this instance to the DOM element using $.data\n\t\tif (typeof this.$el.data(ConfigTableDataName) !== 'undefined') {\n\t\t\tthis.$el.data(ConfigTableDataName).destroy();\n\t\t\t//throw new Error('attempted to recreate configtable on existing element');\n\t\t}\n\t\tthis.$el.data(ConfigTableDataName, this);\n\n\t\t// Initialize templates\n\t\tthis.parseTemplates(options);\n\n\t\t// Prepare element containers, this includes some DOM manipulation\n\t\tthis.prepareElementContainers();\n\n\t\t// Construct instances of the header and footer templates\n\t\t// and attach them to the appropriate elements.\n\t\tthis.setHeaderAndFooter();\n\n\t\t// Add delegated event handlers for the various containers\n\t\tthis.addDOMListeners();\n\n\t\t// Initialize JQueryUI tooltips for error display if available\n\t\t// (this should probably be split out and handled elsewhere)\n\t\tif ($.fn.tooltip) {\n\t\t\t$(this.container.$entry).tooltip({\n\t\t\t\tposition: {\n\t\t\t\t\tmy: 'bottom',\n\t\t\t\t\tat: 'top-2',\n\t\t\t\t\tcollision: 'flipfit'\n\t\t\t\t},\n\t\t\t\titems: '.ui-state-error:enabled',\n\t\t\t\tcontent: function () { return $(this).attr('validation-msg'); }\n\t\t\t});\n\t\t}\n\n\t\t// Call async callback to indicate that subsystems are initialized\n\t\tdone();\n\t}\n\n\n\t// If `provider` is a function that accepts an argument it will be\n\t// treated as asynchronous. The first argument passed will be the\n\t// completion callback function. You must call it with the collection.\n\tinitializeDataProviderAsync (provider, done) {\n\t\tvar result;\n\n\t\tif (typeof provider === 'function') {\n\t\t\tresult = provider(\n\t\t\t\t\t(data) => done(data),\n\t\t\t\t\t(progress) => this.loading(progress)\n\t\t\t\t);\n\t\t\t// If provider returns a value then we use that\n\t\t\t// to satisfy the async callback, otherwise we\n\t\t\t// assume it's working and wait for the callback.\n\t\t\tif (result) {\n\t\t\t\tdone(result);\n\t\t\t}\n\t\t} else {\n\t\t\tdone(provider);\n\t\t}\n\t}\n\n\tpostInit () {\n\t\tregister(this);\n\t\tthis.resize();\n\t\tthis.render();\n\t}\n\n\tdestroy () {\n\t\tunregister(this);\n\t\tthis.container.$header.remove();\n\t\tthis.container.$entry.remove();\n\t\tthis.container.$footer.remove();\n\t}\n\n\tparseTemplates (options) {\n\t\tlet templates = {},\n\t\t\t$templates = this.$el.find('script[type=\"text/template\"]'),\n\t\t\tgetInvalidation = (cid) => this.invalidations.get(cid),\n\t\t\tgetModification = (cid) => this.modifications.get(cid);\n\n\t\t// Scan for all templates\n\t\tfor (let i = 0; i < $templates.length; i++) {\n\t\t\tlet $e = $($templates[i]),\n\t\t\t\tname = $e.attr('name'),\n\t\t\t\ttemplate = $e.text().trim().replace(/^(\\s+)/gm, '').replace(/(\\r\\n|\\n|\\r)/gm, ' ').trim();\n\n\t\t\ttemplates[name] = compileTemplate(template, {\n\t\t\t\tname: name,\n\t\t\t\tshowPosition: this.showPosition,\n\t\t\t\tinvalidation: getInvalidation,\n\t\t\t\tmodification: getModification,\n\t\t\t\thasFocus: (cid) => cid === this.currentFocusedModelCid,\n\t\t\t\tentryHeight: () => this.dimensions.rowH,\n\t\t\t});\n\t\t}\n\n\t\treturn (this.templates = templates);\n\t}\n\n\tprepareElementContainers () {\n\t\tthis.container = {\n\t\t\t$header: $('<div class=\"ct-header-container\"></div>'),\n\t\t\t$entry: $('<div class=\"ct-entry-container\"><div class=\"ct-entries\"></div></div>'),\n\t\t\t$footer: $('<div class=\"ct-footer-container\"></div>')\n\t\t};\n\n\t\tthis.container.$entries = this.container.$entry.find('.ct-entries');\n\n\t\tthis.$el.append([\n\t\t\t\tthis.container.$header,\n\t\t\t\tthis.container.$entry,\n\t\t\t\tthis.container.$footer\n\t\t]);\n\n\t\tthis.$el.toggleClass('show-numbers', this.showPosition);\n\t}\n\n\taddDataListeners () {\n\t\tthis.listenTo(this.collection, 'remove', (model) => {\n\t\t\tthis.propagateToOriginalOrder('remove', model, this.collection);\n\t\t\tthis.validateRelatedModels(model, true);\n\t\t\tthis.invalidations.delete(model.cid);\n\t\t\tthis.updateValidationStateClasses();\n\t\t\tthis.entryViewManager.reset();\n\t\t\tthis.resize();\n\t\t\tupdate();\n\t\t});\n\n\t\tthis.listenTo(this.collection, 'add', (model) => {\n\t\t\tthis.propagateToOriginalOrder('add', model, this.collection);\n\t\t\tthis.entryViewManager.reset();\n\t\t\tthis.resize();\n\t\t\tupdate();\n\t\t});\n\n\t\tthis.listenTo(this.collection, 'sort', (e) => {\n\t\t\tthis.applyConstraints(true);\n\t\t\tthis.entryViewManager.reset();\n\t\t\tupdate();\n\t\t});\n\n\t\tthis.listenTo(this.collection, 'reset', (e) => {\n\t\t\tthis.entryViewManager.reset();\n\t\t\tupdate();\n\t\t});\n\n\t\tthis.listenTo(this.collection, 'change', (model) => {\n\t\t\tthis.validateRelatedModels(model, _.keys(model.changed));\n\t\t\tthis.validateModel(model);\n\t\t\tthis.storeModelModifications(model);\n\t\t\tthis.state.set('modified', true);\n\t\t});\n\n\t\tthis.listenTo(this.collection, 'invalid', (model) => {\n\t\t\tconsole.log('got invalid event', model);\n\t\t});\n\n\t\t// proxy state events\n\t\tthis.listenTo(this.state, 'all', (event) => this.trigger(event));\n\t}\n\n\tvalidateRelatedModels (model, fields, silent) {\n\t\tif (this.constraintManager && (this.constraintManager.pending || fields === true)) {\n\t\t\tfields = fields === true ? undefined : fields;\n\n\t\t\t// slightly confusing, but we collect related models before the\n\t\t\t// constraint sets are updated, as well as afterwards, then the\n\t\t\t// two sets of models are merged and revalidated.\n\t\t\tlet related;\n\n\t\t\trelated = this.constraintManager.modelsRelatedTo(model, fields);\n\t\t\tthis.constraintManager.execute();\n\t\t\trelated = new Set([...related, ...this.constraintManager.modelsRelatedTo(model, fields)]);\n\n\t\t\tfor (model of related) {\n\t\t\t\tthis.validateModel(model);\n\t\t\t}\n\n\t\t\treturn related;\n\t\t}\n\t\treturn new Set(); // no constraint manager, no results.\n\t}\n\n\tsetHeaderAndFooter () {\n\t\tthis.container.$header.html(this.templates.header(this.model).$el);\n\t\tthis.container.$footer.html(this.templates.footer(this.model).$el);\n\t}\n\n\taddDOMListeners () {\n\t\tthis.$el\n\t\t\t.on('click', ':ct2-sortby', (e) => this.onSortCollection(e))\n\t\t\t;\n\n\t\tthis.$el\n\t\t\t.on('click', ':ct2-action', (e) => this.onPerformAction(e))\n\t\t\t;\n\n\t\tthis.container.$entry\n\t\t\t.on('click focus', 'div.ct-entry', (e) => {\n\t\t\t\tlet $entry = $(e.target).closest('.ct-entry');\n\t\t\t\tthis.focusEntry($entry);\n\t\t\t})\n\t\t\t;\n\t}\n\n\tloading (params) {\n\t\tif (this.isLoading) {\n\t\t\tlet tmpl = this.state.get('template_loading') || defaultLoadingTemplate;\n\t\t\tthis.container.$entries.html(tmpl(params));\n\t\t}\n\t}\n\n\tonPerformAction (event) {\n\t\tlet $el = $(event.target).is(':ct2-action') ? $(event.target) : $(event.target).closest(':ct2-action'),\n\t\t\t$entry = $el.closest('.ct-entry'),\n\t\t\taction = $el.attr('data-ct-action');\n\n\t\treturn this.performAction(action, $entry);\n\t}\n\n\tperformAction (action, $entry) {\n\t\tif (typeof this.actions[action] === 'function') {\n\t\t\treturn this.actions[action].apply(this, [$entry && $entry.length && $entry]);\n\t\t}\n\t\tthrow Error(`Action: \"${action}\" is unknown`);\n\t}\n\n\t// Set focus specified by passed-in entry DOM element.\n\t// See `focusModel()` for setting focus based by model.\n\tfocusEntry ($entry) {\n\t\tthis.focusModel($entry ? this.getModelForEntry($entry) : null);\n\t}\n\n\t// Same as `focusEntry()` but allows the use of a model instead\n\tfocusModel (model) {\n\t\tif (this.currentFocusedModelCid) {\n\t\t\t// Remove focus from all visible entries\n\t\t\tthis.container.$entry\n\t\t\t\t.find('.ct-entry')\n\t\t\t\t.removeClass('ct-focus')\n\t\t\t\t;\n\n\t\t\t// Validate the model that's being blurred\n\t\t\tif (!model || this.currentFocusedModelCid !== model.cid) {\n\t\t\t\tlet blurModel = this.collection.get(this.currentFocusedModelCid);\n\n\t\t\t\tif (blurModel) {\n\t\t\t\t\tthis.validateModel(blurModel);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.currentFocusedModelCid = model && model.cid || null;\n\n\t\tif (this.currentFocusedModelCid) {\n\t\t\tlet $entry = this.getEntryForModel(model);\n\t\t\tif ($entry) {\n\t\t\t\t$entry.addClass('ct-focus');\n\t\t\t}\n\t\t}\n\t}\n\n\tgetModelForEntry ($entry) {\n\t\treturn this.collection.get($entry.attr('data-model-cid'));\n\t}\n\n\tgetEntryForModel (model) {\n\t\t// Note that this will fail if the entry is not currently within the visible area\n\t\tlet entry = this.container && this.container.$entry.find(`[data-model-cid=\"${model.cid}\"]`);\n\t\treturn entry && entry.length && entry || undefined;\n\t}\n\n\tstoreModelModifications (model) {\n\t\tlet record = this.modifications.get(model.cid) || new Set();\n\t\tfor (let key of _.keys(model.changed)) {\n\t\t\trecord.add(key);\n\t\t}\n\t\tthis.modifications.set(model.cid, record);\n\n\t\t// Update the entry if it's currently visible\n\t\tlet entry = this.getEntryForModel(model);\n\t\tif (entry) {\n\t\t\tentry.data('ct-template').applyModificationStates(\n\t\t\t\trecord\n\t\t\t);\n\t\t}\n\t}\n\n\tscrollTo (param, done) {\n\t\tvar model, row;\n\n\t\tdone = done || function () {};\n\n\t\tif (typeof param === 'number') {\n\t\t\t// Get the model at the requested row (in the original order)\n\t\t\t// and then use the view position as the destination for scrolling to.\n\t\t\tlet models = this._original_collection_order || this.collection.models;\n\t\t\tmodel = models[param - 1];\n\t\t\tif (model) {\n\t\t\t\trow = this.collection.indexOf(model);\n\t\t\t} else {\n\t\t\t\trow = param; // just fall back to using the passed row as the row\n\t\t\t}\n\t\t} else if (param instanceof Backbone.Model) {\n\t\t\tmodel = param;\n\t\t\trow = this.collection.indexOf(model);\n\t\t} else {\n\t\t\tmodel = this.collection.findWhere(param);\n\t\t\trow = this.collection.indexOf(model);\n\t\t}\n\n\t\trow = Math.min(row, this.collection.length - 1);\n\n\t\tlet dim = this.dimensions,\n\t\t\tentriesTop = this.getEntryContainerHorizontalOffset(),\n\t\t\toffset = Math.max(0, row * dim.rowH + entriesTop - (dim.viewYSpan * 0.5 - dim.rowH * 0.5));\n\n\t\t// Use jQuery scrollTo plugin if it's available\n\t\tif ($.scrollTo) {\n\t\t\t$.scrollTo(offset + 'px', {\n\t\t\t\tduration: 500,\n\t\t\t\tonAfter: done\n\t\t\t});\n\t\t} else {\n\t\t\t$(window).scrollTop(offset);\n\t\t\t_.defer(done); // Allow a cycle to set up the DOM elements during a far scroll\n\t\t}\n\t}\n\n\tonSortCollection (event) {\n\t\tlet $el = $(event.target);\n\t\t$el = $el.is(':ct2-sortby') ? $el : $el.closest(':ct2-sortby');\n\n\t\ttry {\n\t\t\tlet [cls, attr, method] = $el.attr('class').match(/ct-sortby-(_?\\w+)-(\\w+)/);\n\t\t\tthis.sortCollection(attr, method, $el);\n\t\t} catch (e) {\n\t\t\tconsole.log('failed to sort collection');\n\t\t}\n\t}\n\n\t// if $el is 'asc' or 'desc' it will be used as the desired sorting direction\n\tsortCollection (attr, method, $el, direction) {\n\t\tlet $header = this.container.$header;\n\n\t\tif (!$el) {\n\t\t\t$el = $header.find('.sort-asc, .sort-desc');\n\t\t}\n\n\t\tif (!direction) {\n\t\t\t// Obtain the desired sorting direction from the sort element\n\t\t\tdirection = $el.hasClass('sort-desc') ? 'asc' : 'desc';\n\t\t}\n\n\t\t// If the attribute is _row then we need to switch to the originally sorted\n\t\t// model order. But if models were inserted while in another sorting mode, then\n\t\t// the original array of models won't contain that model, so we have to do\n\t\t// a little shuffling around and merge the sorted list back into the original.\n\n\t\tif (attr === '_row') {\n\t\t\tif (typeof this._original_collection_order !== 'undefined') {\n\t\t\t\tlet order = this._original_collection_order;\n\t\t\t\tthis.collection.comparator = (a, b) => {\n\t\t\t\t\tlet ai = order.indexOf(a),\n\t\t\t\t\t\tbi = order.indexOf(b);\n\n\t\t\t\t\treturn (ai < 0 || bi < 0) ?\n\t\t\t\t\t\t0 :\n\t\t\t\t\t\tai - bi;\n\t\t\t\t};\n\t\t\t\tthis.collection.sort();\n\t\t\t\tthis.collection.comparator = undefined;\n\t\t\t\tdelete this._original_collection_order;\n\t\t\t}\n\n\t\t\tif (direction === 'asc') {\n\t\t\t\tthis._original_collection_order = this.collection.models.slice();\n\t\t\t\tthis.collection.models.reverse();\n\t\t\t\tthis.collection.trigger('sort');\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof this._original_collection_order === 'undefined') {\n\t\t\t\tthis._original_collection_order = this.collection.models.slice();\n\t\t\t}\n\n\t\t\tthis.collection.comparator = (direction === 'desc') ?\n\t\t\t\t(a, b) => SortMethods[method](a.get(attr), b.get(attr)) :\n\t\t\t\t(a, b) => SortMethods[method](b.get(attr), a.get(attr));\n\t\t\tthis.collection.sort();\n\t\t\tthis.collection.comparator = undefined;\n\t\t}\n\n\t\t// Only enable drag and drop while we're in the default sort order\n\t\tthis.setDnD(this.dragAndDrop && typeof this._original_collection_order === 'undefined');\n\n\t\t// Update header DOM to reflect new sorting method in action\n\t\t$header\n\t\t\t.find('.sort-asc, .sort-desc')\n\t\t\t.removeClass('sort-asc')\n\t\t\t.removeClass('sort-desc');\n\n\t\t// Update the appropriate sorting column\n\t\t$header\n\t\t\t.find(`.ct-sortby-${attr}-${method}`)\n\t\t\t.addClass(`sort-${direction}`)\n\t\t\t;\n\n\t\treturn false;\n\t}\n\n\tpropagateToOriginalOrder (event, model, collection) {\n\t\tvar i, above;\n\n\t\tif (this._original_collection_order) {\n\t\t\tif (event === 'add') {\n\t\t\t\t// This is some stupid index juggling garbage\n\t\t\t\ti = collection.indexOf(model);  // index as it appears in the interface currently\n\t\t\t\tabove = collection.at(i - 1);   // index of the item above, we'll insert after this into the original.\n\t\t\t\ti = above && this._original_collection_order.indexOf(above) || 0;\n\t\t\t\tthis._original_collection_order.splice(i + 1, 0, model);\n\t\t\t} else if (event === 'remove') {\n\t\t\t\t// This is not particularly important\n\t\t\t\ti = this._original_collection_order.indexOf(model);\n\t\t\t\tthis._original_collection_order.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetOriginalModelIndex (model) {\n\t\tlet models = this._original_collection_order || this.collection.models;\n\t\treturn models.indexOf(model);\n\t}\n\n\n\tstatic get (element) {\n\t\treturn $(element).data(ConfigTableDataName);\n\t}\n\n\tcalculateEntryHeight () {\n\t\tif (this.forceEntryHeight) {\n\t\t\treturn (this.dimensions.rowH = this.entryHeigh = this.forceEntryHeight);\n\t\t}\n\n\t\tif (typeof this.dimensions.rowH === 'undefined') {\n\t\t\t// probably initialization phase. A dummy DOM needs to be created\n\t\t\t// for an entry, added to the DOM momentarily, and measured.\n\t\t\t// This is a bit stupid, but I don't know of a better way to measure an\n\t\t\t// element.\n\t\t\tlet $entry = $(this.templates.entry.template);\n\t\t\tthis.container.$entry.append($entry);\n\t\t\tthis.entryHeight = Math.ceil($entry.outerHeight());\n\t\t\t$entry.remove();\n\n\t\t\tif (this.entryHeight === 0) {\n\t\t\t\t$('body').append($entry);\n\t\t\t\tthis.entryHeight = Math.min(1, Math.ceil($entry.outerHeight()));\n\t\t\t\t$entry.remove();\n\t\t\t}\n\t\t}\n\t\treturn (this.dimensions.rowH = this.entryHeight);\n\t}\n\n\tresize () {\n\t\t// calculate the height of an entry if needed\n\t\t// and then update the master container size to hold n collection\n\t\tthis.calculateEntryHeight();\n\t\tthis.updateViewableArea();\n\n\t\tif (this.collection) {\n\t\t\tlet height = (this.dimensions.rowH * this.collection.length) + 'px';\n\n\t\t\t//this.container.$entry.css('height', height);\n\t\t\tthis.container.$entries.css('height', height);\n\t\t}\n\t}\n\n\trender () {\n\t\tif (this.stickyFloat !== false) {\n\t\t\tlet topSf = new StickyFloat(this.container.$header, typeof this.stickyFloat === 'string' ?\n\t\t\t\t\tthis.stickyFloat : undefined, 'top'),\n\t\t\t\tbottomSf = new StickyFloat(this.container.$footer, typeof this.stickyFloat === 'string' ?\n\t\t\t\t\tthis.stickyFloat : undefined, 'bottom');\n\n\t\t\ttopSf.peer(bottomSf);\n\t\t\tStickyFloat.enable();\n\t\t}\n\n\t\tthis.setDnD(this.dragAndDrop);\n\t}\n\n\tupdateViewableArea (view) {\n\t\tvar windowH, windowY;\n\n\t\tif (!this.collection) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (view) {\n\t\t\twindowY = view.windowY;\n\t\t\twindowH = view.windowH;\n\t\t} else {\n\t\t\twindowY = $(window).scrollTop();\n\t\t\twindowH = $(window).innerHeight();\n\t\t}\n\n\t\tlet entryContainerY = this.getEntryContainerHorizontalOffset(),\n\t\t\tcollectionLength = this.collection.length,\n\t\t\td = this.dimensions,\n\t\t\tlastViewYMin = d.viewYMin,\n\t\t\tpad = 5;\n\n\t\td.viewYMin = windowY - entryContainerY;\n\t\td.viewYMax = windowY - entryContainerY + windowH;\n\t\td.viewYSpan = d.viewYMax - d.viewYMin;\n\t\td.viewYDelta = d.viewYMin === lastViewYMin ? 0 : (d.viewYMin > lastViewYMin ? 1 : -1);\n\n\t\td.viewRowMax = Math.max(-1, Math.min(collectionLength - 1, Math.floor(d.viewYMax / d.rowH + pad)));\n\t\td.viewRowMin = Math.min(d.viewRowMax, Math.max(-1, Math.floor(d.viewYMin / d.rowH) - pad));\n\t\td.viewRowSpan = Math.max(0, d.viewRowMax - d.viewRowMin);\n\t\td.viewRowMaxSpan = Math.max(1, Math.ceil(windowH / d.rowH) + (pad * 2));\n\n\t\tif (this.entryViewManager) {\n\t\t\tthis.entryViewManager.update(this.dimensions);\n\t\t}\n\t}\n\n\tgetModelAt (row) {\n\t\treturn this.collection.at(row);\n\t}\n\n\tsetDnD (enable) {\n\t\tthis.$el.toggleClass('ct-drag-and-drop', enable);\n\t\tif (enable) {\n\t\t\tif (!this.dnd) {\n\t\t\t\tthis.dnd = new Draggable(this.container.$entry, {\n\t\t\t\t\tdraggable: '.ct-entry',\n\t\t\t\t\tselector: '.ct-row-number',\n\t\t\t\t\tcallback: (...args) => this.handleDraggableCallback(...args)\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.dnd) {\n\t\t\t\tthis.dnd.destroy();\n\t\t\t\tdelete this.dnd;\n\t\t\t}\n\t\t}\n\t}\n\n\thandleDraggableCallback (position, $dropped) {\n\t\tlet dim = this.dimensions;\n\n\t\tif (position) {\n\t\t\tif (!this.$droppable) {\n\t\t\t\tlet $droppable = $('<div class=\"ct-droppable\"/>');\n\t\t\t\tthis.container.$entries.append($droppable);\n\t\t\t\tthis.$droppable = $droppable;\n\t\t\t}\n\n\t\t\tlet dropPosition = Math.floor((position) / dim.rowH) * dim.rowH;\n\t\t\tthis.$droppable.css({top: (dropPosition - 2) + 'px'});\n\n\t\t\tif ($dropped) {\n\t\t\t\tif (this.$droppable) {\n\t\t\t\t\tthis.$droppable.remove();\n\t\t\t\t\tthis.$droppable = null;\n\t\t\t\t}\n\n\t\t\t\t// Drag and drop should only be enabled while sorting in regular sort order\n\t\t\t\t// so no special care needs to be taken in regards to handling the original\n\t\t\t\t// sort order stuff that's required by the column sorting methods.\n\t\t\t\tlet model = this.collection.get($dropped.attr('data-model-cid')),\n\t\t\t\t\tmodels = this.collection.models,\n\t\t\t\t\tfromIndex = models.indexOf(model),\n\t\t\t\t\ttoIndex = parseInt((position) / dim.rowH, 10);\n\n\t\t\t\ttoIndex = fromIndex < toIndex ? toIndex - 1 : toIndex;\n\n\t\t\t\tif (fromIndex === toIndex) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmodels.splice(fromIndex, 1);\n\t\t\t\tmodels.splice(toIndex, 0, model);\n\t\t\t\tthis.collection.trigger('sort');\n\t\t\t}\n\t\t}\n\t}\n\n\tapplyConstraints (force) {\n\t\tlet cm = this.constraintManager;\n\n\t\tif (typeof cm !== 'undefined') {\n\t\t\tif (cm.pending || force) {\n\t\t\t\tcm.execute();\n\t\t\t}\n\n\t\t\tfor (let [model, fields] of cm.modelsWithFieldDescriptions) {\n\t\t\t\tlet invalidations = this.invalidations.get(model.cid) || {};\n\t\t\t\tlet results = {};\n\n\t\t\t\tfor (let [field, description] of _.pairs(fields)) {\n\t\t\t\t\tresults[field] = description;\n\t\t\t\t}\n\n\t\t\t\tthis.invalidations.set(model.cid, results);\n\n\t\t\t\tlet entry = this.getEntryForModel(model);\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.data('ct-template').applyValidationStates(\n\t\t\t\t\t\t_.keys(diff(invalidations, results))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tvalidate (done, silent) {\n\t\tvar i = this.collection.length - 1,\n\t\t\tcollection = this.collection,\n\t\t\tself = this,\n\n\t\t\tnext = function () {\n\t\t\t\tvar batch = 100;\n\t\t\t\twhile (batch-- > 0) {\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\tself.updateValidationStateClasses();\n\t\t\t\t\t\treturn done();\n\t\t\t\t\t}\n\t\t\t\t\tself.validateModel(collection.models[i--], silent);\n\t\t\t\t}\n\t\t\t\t_.defer(next);\n\t\t\t};\n\n\t\tthis.applyConstraints(true);\n\n\t\tnext();\n\t}\n\n\t// return true on valid, false on invalid\n\tvalidateSync (silent) {\n\t\tvar models = this.collection.models;\n\n\t\tthis.applyConstraints(true);\n\n\t\tfor (var i = 0; i < models.length; i++) {\n\t\t\tthis.validateModel(models[i], silent);\n\t\t}\n\n\t\tthis.updateValidationStateClasses();\n\n\t\t// If the invalidations map is empty then the table contents are valid\n\t\treturn this.invalidations.size === 0;\n\t}\n\n\tvalidateModel (model, silent) {\n\t\tvar values = model.toJSON(),\n\t\t\tinvalidations,\n\t\t\tresult,\n\t\t\tresults = {},\n\t\t\trevalidate,\n\t\t\tchanges;\n\n\t\t// Utilize global Validation\n\t\tfor (let [field, validator] of _.pairs(this.validation)) {\n\t\t\t// Compile the validation expression (these are cached, safe to call often)\n\t\t\tlet fn = Validation.expr.compile(validator);\n\n\t\t\tlet result = fn(values[field] || '', values);\n\t\t\tif (result) {\n\t\t\t\tresults[field] = result.error;\n\t\t\t}\n\t\t}\n\n\t\tif (this.constraintManager && this.constraintManager.has(model)) {\n\t\t\tfor (let [field, messages] of this.constraintManager.get(model)) {\n\t\t\t\t// Use the first validation message if there was one, and then\n\t\t\t\t// only use the first constraint message.\n\t\t\t\tresults[field] = results[field] || messages[0];\n\t\t\t}\n\t\t}\n\n\t\t// Get invalidations for the current model\n\t\tinvalidations = this.invalidations.get(model.cid) || {};\n\n\t\tif (_.keys(results).length) {\n\t\t\tthis.invalidations.set(model.cid, results);\n\t\t} else {\n\t\t\t// Invalidations should only be cleared if there are also no constraint\n\t\t\t// failures associated with this model.\n\t\t\tif (this.constraintManager && !this.constraintManager.has(model)) {\n\t\t\t\tthis.invalidations.delete(model.cid);\n\t\t\t}\n\t\t}\n\n\t\tif (silent) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the entry if it's currently visible\n\t\tlet entry = this.getEntryForModel(model);\n\t\tif (entry) {\n\t\t\tentry.data('ct-template').applyValidationStates(\n\t\t\t\t_.keys(diff(invalidations, results))\n\t\t\t);\n\t\t}\n\t}\n\n\t// Update the validation class attributes on the table itself\n\tupdateValidationStateClasses () {\n\t\tvar invalid = this.invalidations.size > 0;\n\n\t\tthis.$el.toggleClass('invalid', invalid);\n\n\t\tif (!invalid && this.container && this.container.$entries) {\n\t\t\tthis.container\n\t\t\t\t.$entries\n\t\t\t\t.find('.ui-state-error')\n\t\t\t\t.removeClass('ui-state-error')\n\t\t\t\t;\n\t\t}\n\t}\n\n\tfocusNextInvalid () {\n\t\tvar field;\n\n\t\tfor (let [cid, fields] of this.invalidations.entries()) {\n\t\t\tfield = Object.keys(fields)[0];\n\n\t\t\tlet model = this.collection.get(cid);\n\t\t\tthis.focusModel(model);\n\t\t\t/*jshint -W083*/\n\t\t\tthis.scrollTo(model, () => {\n\t\t\t\t_.defer(() => {\n\t\t\t\t\t// focus the field, that will trigger an entry focus as well.\n\t\t\t\t\tlet template = this.getEntryForModel(model).data('ct-template');\n\t\t\t\t\ttemplate.focusField(field);\n\t\t\t\t});\n\t\t\t});\n\t\t\t/*jshint +W083*/\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Returns an object containing details about invalid items\n\t// in the data collection.\n\tget invalid () {\n\t\tvar result = [],\n\t\t\tm2v = this.templates.entry.bindings.m2v;\n\n\t\tfor (let [cid, fields] of this.invalidations.entries()) {\n\t\t\tlet elements = {};\n\t\t\tfor (let field of _.keys(fields)) {\n\t\t\t\telements[field] = m2v[field];\n\t\t\t}\n\n\t\t\tresult.push({\n\t\t\t\tcid: cid,            // Associated model.cid\n\t\t\t\telements: elements,  // Keys are model attribute names, value is an array of element names\n\t\t\t\terrors: fields,      // Keys are model attribute names, value is error string\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetTableData (noValidate) {\n\t\tif (!noValidate) {\n\t\t\tthis.validateSync();\n\t\t}\n\n\t\tthis.modifications.clear();\n\t\tthis.sortCollection('_row', 'numeric', null, 'desc');\n\t\treturn this.collection.toJSON();\n\t}\n\n\t// Returns true if any modifications have been made to the associated collection.\n\t// Returns false after `resetModifiedStatus()` has been called.\n\tget hasBeenModified () {\n\t\treturn this.state.get('modified', false);\n\t}\n\n\tresetModifiedStatus () {\n\t\tthis.state.set('modified', false);\n\t}\n}\n\nConfigTable.prototype.actions = {\n\n\tdelete: function ($entry) {\n\t\tlet model = this.getModelForEntry($entry);\n\t\tthis.collection.remove(model);\n\t\treturn false;\n\t},\n\n\tappend: function ($entry) {\n\t\tlet newModel;\n\n\t\t// if $entry is provided, then insert after\n\t\tif ($entry) {\n\t\t\tlet model = this.getModelForEntry($entry),\n\t\t\t\tindex = this.collection.indexOf(model);\n\t\t\tnewModel = this.modelInit(index + 1);\n\t\t\tthis.collection.add(newModel, {at: index + 1});\n\t\t} else {\n\t\t\tnewModel = this.modelInit();\n\t\t\tthis.collection.push(newModel);\n\t\t}\n\n\t\tthis.focusModel(newModel);\n\t\tthis.scrollTo(newModel);\n\t\treturn false;\n\t}\n};\n\nexport var VERSION = '__VERSION__';\n\nexport function init(options) {\n\treturn new ConfigTable(options);\n}\n\nexport function get(selector) {\n\treturn ConfigTable.get(selector);\n}\n\n_.extend(ConfigTable.prototype, Backbone.Events);\n\nexport { ConfigTable };\n","import { duplicates } from './collectionutil';\n\nvar constraintMethods = {\n\tunique: {\n\t\tdescription: function (fields, params) {\n\t\t\tvar msg = '';\n\t\t\tif (params && params.models && params.models.length) {\n\t\t\t\tlet rows = params.models\n\t\t\t\t\t.filter((model) => model !== params.model)\n\t\t\t\t\t.map((model) => params.constraintManager.getIndex(model) + 1);\n\n\t\t\t\tmsg = `Duplicate found on row(s): ${commaJoin(rows)}.`;\n\t\t\t}\n\n\t\t\tif (fields.length === 1) {\n\t\t\t\treturn [msg, `The ${fields[0]} field must be unique`].join(' ');\n\t\t\t} else if (fields.length == 2) {\n\t\t\t\treturn [msg, `${fields[0]} and ${fields[1]} fields must be unique together`].join(' ');\n\t\t\t}\n\t\t\treturn [msg, commaJoin(fields) + ' fields must be unique. '].join(' ');\n\t\t},\n\t\tmethod: function (collection, fields) {\n\t\t\treturn duplicates(collection, fields);\n\t\t}\n\t}\n};\n\nexport function commaJoin(arr) {\n\tif (arr.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (arr.length === 1) {\n\t\treturn arr[0];\n\t}\n\n\tif (arr.length === 2) {\n\t\treturn arr[0] + ' and ' + arr[1];\n\t}\n\n\treturn (arr.slice(0, arr.length - 1).join(', ')) + ', and ' + (arr[arr.length - 1]);\n}\n\n\nfunction buildConstraintMethod(name, fields) {\n\tlet cm = constraintMethods[name];\n\n\treturn (collection) => {\n\t\treturn {\n\t\t\tname: name,\n\t\t\tfields: fields,\n\t\t\tdescription: (params) => cm.description(fields, params),\n\t\t\tdata: cm.method(collection, fields)\n\t\t};\n\t};\n}\n\nexport default class ConstraintManager {\n\tconstructor (collection, constraints, options) {\n\t\tthis.collection = collection;\n\t\tthis.constraints = [];\n\t\tthis.parseConstraints(constraints);\n\t\tthis.addListeners();\n\n\t\tthis.pendingConstraints = new Set();\n\t\tthis.constraintMethodResults = new Map();\n\n\t\tthis.getIndex = options.getIndex || ((model) => collection.indexOf(model) + 1);\n\t}\n\n\taddListeners () {\n\t\tfor (let [field, funcs] of this.watchFields) {\n\t\t\tthis.listenTo(this.collection, `change:${field}`, this.onFieldChanged);\n\t\t}\n\t}\n\n\tparseConstraints (constraints) {\n\t\tvar watchFields = new Map(),\n\t\t\tconstraintMethods = new Set();\n\n\t\tfor (let [constraint, groups] of _.pairs(constraints)) {\n\n\t\t\tfor (let fields of groups) {\n\t\t\t\tlet fn = buildConstraintMethod(constraint, fields);\n\n\t\t\t\tconstraintMethods.add(fn);\n\n\t\t\t\tfor (let field of fields) {\n\t\t\t\t\tlet wf = watchFields.get(field);\n\t\t\t\t\tif (wf) {\n\t\t\t\t\t\twf.push(fn);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twatchFields.set(field, [fn]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tthis.watchFields = watchFields;\n\t\tthis.constraintMethods = constraintMethods;\n\t}\n\n\t// This method doesn't actually run any constraints, it only\n\t// adds the constraints that should be run based on modifications\n\t// to fields. You must call call executePendingConstraints() to\n\t// get the results.\n\tonFieldChanged (model, value) {\n\t\tvar changed = _.keys(model.changed);\n\n\t\t// Iterate through changed fields and construct a set of\n\t\t// constraint methods that are related to the changed fields.\n\t\tfor (let field of changed) {\n\t\t\tlet watchField = this.watchFields.get(field);\n\t\t\tfor (let func of watchField) {\n\t\t\t\t// Using a set means we won't potentially call the same\n\t\t\t\t// constraint method twice in the same sweep.\n\t\t\t\tthis.pendingConstraints.add(func);\n\t\t\t}\n\t\t}\n\t}\n\n\texecute () {\n\t\tlet methods = this.pending ?\n\t\t\tthis.pendingConstraints :\n\t\t\tthis.constraintMethods,\n\t\t\tmodels = new Set(),\n\t\t\tresultGroups = new Map();\n\n\n\t\tfor (let fn of methods) {\n\t\t\tlet result = fn(this.collection),\n\t\t\t\tinvalidations = new Map();\n\n\t\t\tif (result.data.length) {\n\t\t\t\tfor (let group of result.data) {\n\t\t\t\t\tlet record = {\n\t\t\t\t\t\tdescriptionFn: result.description,\n\t\t\t\t\t\tfields: result.fields,\n\t\t\t\t\t\tmodels: group\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (let model of group) {\n\t\t\t\t\t\t// Assign the record to each cid contained within\n\t\t\t\t\t\t// the group set.\n\t\t\t\t\t\tinvalidations.set(model, record);\n\t\t\t\t\t\tmodels.add(model);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.constraintMethodResults.set(fn, invalidations);\n\t\t}\n\n\t\tthis.pendingConstraints = new Set();\n\t}\n\n\tget pending () {\n\t\treturn this.pendingConstraints.size > 0;\n\t}\n\n\t// Returns a all models that have related constraint issues.\n\tget models () {\n\t\tlet models = new Set();\n\t\tfor (let [fn, map] of this.constraintMethodResults.entries()) {\n\t\t\tfor (let model of map.keys()) {\n\t\t\t\tmodels.add(model);\n\t\t\t}\n\t\t}\n\t\treturn models;\n\t}\n\n\t// Returns true if the provided cid has a constraint issue related to it.\n\t// This is more efficient than calling `cids` if you just need to check\n\t// one field.\n\thas (model) {\n\t\tif (typeof model === 'string') {\n\t\t\tmodel = this.collection.get(model);\n\t\t}\n\n\t\tfor (let [fn, map] of this.constraintMethodResults.entries()) {\n\t\t\tif (map.has(model)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// Get fields and error descriptions for model or cid\n\tget (model) {\n\t\tif (typeof model === 'string') {\n\t\t\tmodel = this.collection.get(model);\n\t\t}\n\n\t\tlet fields = new Map();\n\n\t\tfor (let [fn, map] of this.constraintMethodResults.entries()) {\n\t\t\tlet record = map.get(model);\n\n\t\t\tif (record) {\n\t\t\t\tlet description = record.descriptionFn({\n\t\t\t\t\tmodel: model,\n\t\t\t\t\tconstraintManager: this,\n\t\t\t\t\tcollection: this.collection,\n\t\t\t\t\tmodels: record.models\n\t\t\t\t});\n\n\t\t\t\tfor (let field of record.fields) {\n\t\t\t\t\tlet descriptions = fields.get(field);\n\t\t\t\t\tif (!descriptions) {\n\t\t\t\t\t\tdescriptions = [description];\n\t\t\t\t\t\tfields.set(field, descriptions);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdescriptions.push(description);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn fields;\n\t}\n\n\tget modelsWithFieldDescriptions () {\n\t\tlet models = new Map();\n\n\t\tfor (let [fn, map] of this.constraintMethodResults.entries()) {\n\t\t\tfor (let [model, record] of map) {\n\t\t\t\tlet description = record.descriptionFn({\n\t\t\t\t\t\tmodel: model,\n\t\t\t\t\t\tconstraintManager: this,\n\t\t\t\t\t\tcollection: this.collection,\n\t\t\t\t\t\tmodels: record.models\n\t\t\t\t\t});\n\n\t\t\t\tlet result = models.get(model) || {};\n\n\t\t\t\tfor (let field of record.fields) {\n\t\t\t\t\tresult[field] = description;\n\t\t\t\t}\n\n\t\t\t\tmodels.set(model, result);\n\t\t\t}\n\t\t}\n\n\t\treturn models;\n\t}\n\n\tmodelsRelatedTo (model, fields) {\n\t\tlet models = new Set();\n\n\t\t// Collect all the functions related to the specified fields into\n\t\t// the functions set.\n\t\tlet functions;\n\t\tif (fields) {\n\t\t\tfunctions = new Set();\n\t\t\tfor (let field of new Set(fields)) {\n\t\t\t\tif (this.watchFields.has(field)) {\n\t\t\t\t\tfor (let fn of this.watchFields.get(field)) {\n\t\t\t\t\t\tfunctions.add(fn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfunctions = this.constraintMethods;\n\t\t}\n\n\t\tfor (let fn of functions) {\n\t\t\tlet map = this.constraintMethodResults.get(fn);\n\t\t\tfor (let model of map.keys()) {\n\t\t\t\tmodels.add(model);\n\t\t\t}\n\t\t}\n\n\t\treturn models;\n\t}\n}\n\n_.extend(ConstraintManager.prototype, Backbone.Events);\n\n","export default function diff(a, b, ignore) {\n\t// Return all attributes in B that differ from A\n\tvar result = {},\n\t\taKeys = [],\n\t\tx, i;\n\n\tignore = ignore || [];\n\n\t// Build array of all of A's keys\n\tfor (x in a) {\n\t\tif (ignore.indexOf(x) > -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (a.hasOwnProperty(x)) {\n\t\t\taKeys.push(x);\n\t\t}\n\t}\n\n\tfor (x in b) {\n\t\tif (ignore.indexOf(x) > -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (b.hasOwnProperty(x)) {\n\t\t\t// If they differ, store B's value\n\t\t\tif (a[x] !== b[x]) {\n\t\t\t\tresult[x] = b[x];\n\t\t\t}\n\t\t\t// Remove the key from aKeys since it's been handled\n\t\t\ti = aKeys.indexOf(x);\n\t\t\tif (i > -1) {\n\t\t\t\taKeys.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Any of the remaining A keys were removed\n\t// from B, so they are injected them as undefined values.\n\tfor (i in aKeys) {\n\t\tresult[aKeys[i]] = undefined;\n\t}\n\n\treturn result;\n}\n","var ns = '.ct-draggable';\n\nexport default class Draggable {\n\tconstructor ($el, options) {\n\t\tthis.$el = $el;\n\t\tthis.callback = options.callback;\n\t\tthis.dragHandle = options.selector;\n\t\tthis.getDragElement = (event) => $(event.target).closest(options.draggable);\n\t\tthis.threshold = options.threshold || 250;\n\t\tthis.scrollSpeed = options.scrollSpeed || 2;\n\t\tthis.$el.on(`${this.dragHandle} mousedown${ns}`, this.dragHandle, (e) => this.onMouseDown(e));\n\t\tthis.scrolling = false;\n\t}\n\n\tdestroy () {\n\t\tthis.$el.off(`mousedown${ns}`);\n\t}\n\n\taddListeners (dragHandle) {\n\t\t$(window)\n\t\t\t.on(`mousemove${ns}`, (e) => this.onMouseMove(e))\n\t\t\t.on(`mouseup${ns}`, (e) =>this.onMouseUp(e))\n\t\t\t;\n\t}\n\n\tremoveListeners () {\n\t\t$(window)\n\t\t\t.off(`mousemove${ns}`)\n\t\t\t.off(`mouseup${ns}`)\n\t\t\t;\n\t}\n\n\tonMouseDown (e) {\n\t\t// store the element that the drag started on\n\t\tthis.$sourceElement = this.getDragElement(e);\n\t\tthis.startY = window.pageYOffset + e.clientY;\n\t\tthis.dragging = false;\n\t\tthis.addListeners();\n\t\te.preventDefault();\n\n\t\t// determine scroll threshold boundaries\n\t\tlet windowHeight = this.windowHeight = $(window).innerHeight();\n\t\tthis.scrollMin = this.threshold;\n\t\tthis.scrollMax = windowHeight - this.threshold;\n\t\treturn false;\n\t}\n\n\tonMouseMove (e) {\n\t\tlet delta = window.pageYOffset + e.clientY - this.startY,\n\t\t\ty = e.clientY;\n\n\t\tthis.clientY = y;\n\n\t\tif (this.dragging) {\n\t\t\tif (!this.scrolling && (y < this.scrollMin || y > this.scrollMax)) {\n\t\t\t\tthis.onScrollStart(y);\n\t\t\t}\n\t\t\treturn this.onDrag(delta);\n\t\t}\n\n\t\tthis.dragging = Math.abs(delta) > 3;\n\n\t\tif (this.dragging) {\n\t\t\treturn this.onDragStart();\n\t\t}\n\t}\n\n\tonMouseUp (e) {\n\t\tlet delta = window.pageYOffset + e.clientY - this.startY;\n\n\t\tthis.onScrollStop();\n\t\tif (this.dragging) {\n\t\t\tthis.onDragEnd(delta);\n\t\t}\n\t\tthis.removeListeners();\n\t}\n\n\n\tonDragStart (startY) {\n\t\tthis.$draggable = this.$sourceElement\n\t\t\t.clone()\n\t\t\t.addClass('dragging')\n\t\t\t;\n\n\t\tthis.$sourceElement\n\t\t\t.parent()\n\t\t\t.append(this.$draggable);\n\n\t\tlet top = this.$sourceElement.position().top;\n\t\tlet height = this.$sourceElement.outerHeight();\n\n\t\tthis.dragElementTop = top;\n\n\t\tthis.gapPosition = function (delta) {\n\t\t\treturn (top + height) + delta;\n\t\t};\n\n\t\tthis.callback(this.gapPosition(0));\n\t}\n\n\tonDrag (delta) {\n\t\tthis.$draggable.css('transform', 'translateY(' + (this.dragElementTop + delta) + 'px)');\n\t\tthis.callback(this.gapPosition(delta));\n\t}\n\n\tonDragEnd (delta) {\n\t\tthis.$draggable.remove();\n\t\tthis.callback(this.gapPosition(delta), this.$sourceElement);\n\t}\n\n\tonScrollStart (y) {\n\t\tvar last,\n\t\t\tself = this,\n\t\t\tmin = this.scrollMin,\n\t\t\tmax = this.scrollMax,\n\t\t\tthresh = this.threshold,\n\t\t\tspeed = this.scrollSpeed,\n\t\t\tupdate = function (timestamp) {\n\t\t\t\tlet delta = (timestamp - (last || timestamp)) * speed,\n\t\t\t\t\tadjust;\n\n\t\t\t\tif (self.clientY < min) {\n\t\t\t\t\tadjust = ((min - self.clientY) / thresh) * delta * -1;\n\t\t\t\t} else if (self.clientY > max) {\n\t\t\t\t\tadjust = ((self.clientY - max) / thresh) * delta;\n\t\t\t\t} else {\n\t\t\t\t\treturn self.onScrollStop();\n\t\t\t\t}\n\n\t\t\t\tif (adjust) {\n\t\t\t\t\tadjust = Math.ceil(adjust);\n\t\t\t\t\twindow.scrollBy(0, adjust);\n\t\t\t\t\tself.onDrag(window.pageYOffset + self.clientY - self.startY);\n\t\t\t\t}\n\n\t\t\t\tif (self.scrolling) {\n\t\t\t\t\trequestAnimationFrame(update);\n\t\t\t\t}\n\n\t\t\t\tlast = timestamp;\n\t\t\t};\n\n\t\trequestAnimationFrame(update);\n\t\tthis.scrolling = true;\n\t}\n\n\tonScrollStop () {\n\t\tthis.scrolling = false;\n\n\t}\n}\n\nexport { Draggable };\n","export default class EntryPool {\n\n\tconstructor (options) {\n\t\tthis.getParentElement = options.getParentElement;\n\t\tthis.buildEntry = options.buildEntry;\n\t\tthis.entries = [];\n\t\tthis._index = 0;\n\t\tthis._width = 0;\n\t}\n\n\treset () {\n\t\tthis._index = 0;\n\t\tthis._width = 0;\n\n\t\tfor (let i = 0; i < this.entries.length; i++) {\n\t\t\tthis.entries[i].$el\n\t\t\t\t.hide()\n\t\t\t\t;\n\t\t}\n\t}\n\n\tgrowBy (n) {\n\t\tlet elements = [],\n\t\t$parent = this.getParentElement();\n\n\t\tif (!$parent) {\n\t\t\tthrow Error(\"couldn't get parent element\");\n\t\t}\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tlet entry = this.buildEntry();\n\t\t\tthis.entries.push(entry);\n\t\t\telements.push(entry.$el);\n\t\t\tentry.$el.hide(); //css('top', '-20em');\n\t\t}\n\n\t\t$parent.append(elements);\n\t}\n\n\tforward () {\n\t\tlet i = this._index;\n\t\tthis._width = Math.min(this._width + 1, this.entries.length);\n\n\t\tthis._index = (this._index + 1) % this.entries.length;\n\n\t\treturn i;\n\t}\n\n\tbackward () {\n\t\tlet i = (this._index - this._width - 1);\n\n\t\tif (this._width < this.entries.length) {\n\t\t\tthis._width++;\n\t\t} else {\n\t\t\tthis._index--;\n\t\t\twhile (this._index < 0) {\n\t\t\t\tthis._index += this.entries.length;\n\t\t\t}\n\t\t}\n\n\t\twhile (i < 0) {\n\t\t\ti = this.entries.length + i;\n\t\t}\n\n\t\treturn i;\n\t}\n\n\tindex () {\n\t\tlet i = this._index % this.entries.length;\n\t\twhile (i < 0) {\n\t\t\ti += this.entries.length;\n\t\t}\n\t\tthis._index = i;\n\t\treturn i;\n\t}\n\n\tget (delta) {\n\t\tlet e;\n\n\t\tif (delta > 0) {\n\t\t\te = this.entries[this.forward()];\n\t\t} else {\n\t\t\te = this.entries[this.backward()];\n\t\t}\n\n\t\treturn e;\n\t}\n\n\tget length () {\n\t\treturn this.entries.length;\n\t}\n}\n","import EntryPool from './entrypool';\n\nexport default class EntryViewManager {\n\tconstructor (options) {\n\t\tthis.options = options;\n\n\t\tthis.getCollection = options.getCollection;\n\t\tthis.getModelAt = options.getModelAt;\n\t\tthis.getEntryInit = options.getEntryInit;\n\n\t\tthis.entryPool = new EntryPool({\n\t\t\tbuildEntry: options.buildEntry,\n\t\t\tgetParentElement: options.getEntryParentElement,\n\t\t});\n\n\t\tthis.reset();\n\t}\n\n\treset () {\n\t\tthis.entryPool.reset();\n\t\tthis.viewRowMin = -1;\n\t\tthis.viewRowMax = -1;\n\t}\n\n\tprepareElement (delta, row) {\n\t\tlet item = this.entryPool.get(delta);\n\t\tlet model = this.getModelAt(row);\n\n\t\titem.setModel(model, {\n\t\t\t_row: this.options.getIndex(model) + 1\n\t\t});\n\n\t\tthis.getEntryInit()(item, model);\n\n\t\titem.$el.show();\n\n\t\treturn item.$el;\n\t}\n\n\tupdate (dim) {\n\t\tlet collection = this.getCollection();\n\n\t\t// If either there's been a large screen adjustment or the viewable\n\t\t// area exceeds the currently viewed area.\n\t\tif (\n\t\t\tdim.viewRowMax < this.viewRowMin ||\n\t\t\tdim.viewRowMin > this.viewRowMax ||\n\t\t\tdim.viewRowMaxSpan > this.entryPool.entries.length\n\t\t) {\n\t\t\tif (dim.viewRowMaxSpan > this.entryPool.entries.length) {\n\t\t\t\tthis.entryPool.growBy(dim.viewRowMaxSpan - this.entryPool.entries.length);\n\t\t\t}\n\n\t\t\tthis.reset();\n\t\t\tthis.viewRowMax = this.viewRowMin = dim.viewRowMin;\n\t\t\tdim.viewYDelta = 0;\n\t\t}\n\n\t\tif (dim.viewYDelta > -1) {\n\t\t\t// scrolling down\n\t\t\twhile (this.viewRowMax < dim.viewRowMax) {\n\t\t\t\tthis.viewRowMax++;\n\t\t\t\tlet row = this.viewRowMax;\n\t\t\t\tlet $el = this.prepareElement(1, row);\n\t\t\t\t$el.css('transform', 'translateY(' + ((row) * dim.rowH) + 'px)');\n\t\t\t}\n\t\t\tthis.viewRowMin = Math.max(this.viewRowMax - dim.viewRowMaxSpan, this.viewRowMin);\n\t\t} else {\n\t\t\t// scrolling up\n\t\t\twhile (this.viewRowMin > dim.viewRowMin) {\n\t\t\t\tlet row = this.viewRowMin;\n\t\t\t\tthis.viewRowMin--;\n\t\t\t\tlet $el = this.prepareElement(-1, row);\n\t\t\t\t$el.css('transform', 'translateY(' + ((row) * dim.rowH) + 'px)');\n\t\t\t}\n\t\t\tthis.viewRowMax = Math.min(this.viewRowMax, this.viewRowMin + dim.viewRowMaxSpan);\n\t\t}\n\t}\n}\n","export default {\n\t'ct2-autofill':       (o) => (/ct-autofill-(from|to|bidi)/).test(o.className),\n\t'ct2-autofill-from':  (o) => (/ct-autofill-(from|bidi)/).test(o.className),\n\t'ct2-autofill-to':    (o) => (/ct-autofill-(to|bidi)/).test(o.className),\n\t'ct2-sortby':         (o) => (/ct-sortby-([\\w]+)/).test(o.className),\n\t'ct2-bind':           (o) => o.getAttribute('data-ct-bind'),\n\t'ct2-id':             (o) => o.getAttribute('data-ct-id'),\n\t'ct2-action':         (o) => o.getAttribute('data-ct-action'),\n\t'ct2-validate':       (o) => o.getAttribute('data-ct-validate'),\n\t'configtable':        (o) => $(o).hasClass('configtable') && $(o).data('configtable'),\n};\n","export default {\n\tdefault: function (a, b) {\n\t\tvar a1, b1,\n\t\ti = 0,\n\t\trx = /(\\d+)|(\\D+)/g,\n\t\trd = /\\d/,\n\t\tL;\n\n\t\tif (isFinite(a) && isFinite(b)) {\n\t\t\treturn a - b;\n\t\t}\n\n\t\ta = String(a).toLowerCase();\n\t\tb = String(b).toLowerCase();\n\t\tif (a === b) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (!(rd.test(a) && rd.test(b))) {\n\t\t\treturn a > b ? 1 : -1;\n\t\t}\n\n\t\ta = a.match(rx);\n\t\tb = b.match(rx);\n\t\tL = a.length > b.length ? b.length : a.length;\n\t\twhile (i < L) {\n\t\t\ta1 = a[i];\n\t\t\tb1 = b[i];\n\t\t\ti = i + 1;\n\t\t\tif (a1 !== b1) {\n\t\t\t\tif (isFinite(a1) && isFinite(b1)) {\n\t\t\t\t\tif (a1.charAt(0) === '0') {\n\t\t\t\t\t\ta1 = '.' + a1;\n\t\t\t\t\t}\n\t\t\t\t\tif (b1.charAt(0) === '0') {\n\t\t\t\t\t\tb1 = '.' + b1;\n\t\t\t\t\t}\n\t\t\t\t\treturn (b1 - a1);\n\t\t\t\t}\n\t\t\t\treturn a1 > b1 ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn a.length - b.length;\n\t},\n\n\tautonumber: function (a, b) {\n\t\t// Strip leading zeroes, colons, and commas\n\t\ta = a.replace(/^0*/, '').replace(/[:,]/g, '');\n\t\tb = b.replace(/^0*/, '').replace(/[:,]/g, '');\n\n\t\ta = a || 0;\n\t\tb = b || 0;\n\n\t\treturn (a - b);\n\t},\n\n\tip: function (a, b) {\n\t\tvar aa = a.split('.'),\n\t\tba = b.split('.'),\n\t\tL = Math.min(aa.length, ba.length),\n\t\ti,\n\t\tc;\n\n\t\tfor (i = 0; i < L; i = i + 1) {\n\t\t\tc = aa[i] - ba[i];\n\t\t\tif (c !== 0) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\tsubnet: function (a, b) {\n\t\tvar ip_sort_result,\n\t\taa = a.split('/'), /* ['172.17.0.0', '24'] */\n\t\tbb = b.split('/'),\n\t\ta_mask = parseInt(aa[1], 10),\n\t\tb_mask = parseInt(bb[1], 10);\n\n\t\treturn (a_mask === b_mask) ? $.cipa.configtable.sortmethods.ip(aa[0], bb[0]) : (b_mask - a_mask);\n\t},\n\n\tstring: function (a, b) {\n\t\treturn a < b ? -1 : a > b ? 1 : 0;\n\t}\n};\n\n","\nvar _stickyfloats = new Map(),\n\t_listening = false,\n\tdeferUpdate = _.throttle(update, 0);\n\n\nfunction updateTopGroupset(groupset, dim) {\n\tlet accum = 0;\n\tfor (let sf of groupset) {\n\t\tlet y = sf.top + accum;\n\t\tlet h = sf.height;\n\t\tlet peerOffset = sf.peer && Math.min(0, sf.peer.top - h - dim.yMin) || 0;\n\n\t\tif (sf.floating && y > dim.yMin || peerOffset < -h) {\n\t\t\tsf.sink();\n\t\t} else if (!sf.floating && y < dim.yMin) {\n\t\t\tsf.float();\n\t\t}\n\t\taccum += sf.update(accum + peerOffset);\n\t}\n}\n\nfunction updateBottomGroupset(groupset, dim) {\n\tlet accum = 60; // FIXME This should be 0, this only compensates for the save/apply bar\n\tfor (let sf of groupset) {\n\t\tlet y = sf.bottom - accum;\n\t\tlet h = sf.height;\n\t\tlet peerOffset = sf.peer && Math.max(0, sf.peer.bottom + h - dim.yMax) || 0;\n\n\t\tif (sf.floating && y < dim.yMax || peerOffset > h) {\n\t\t\tsf.sink();\n\t\t} else if (!sf.floating && y > dim.yMax) {\n\t\t\tsf.float();\n\t\t}\n\t\taccum += sf.update(accum - peerOffset);\n\t}\n}\n\nfunction update() {\n\tlet windowY = $(window).scrollTop();\n\tlet windowH = $(window).innerHeight();\n\n\t// FIXME\n\t// This is a hack for the current Cipafilter interface, which uses the old\n\t// stickyfloats for the save bar at the bottom. The save bar should eventually\n\t// use new stickyfloats and this hack should be removed.\n\twindowH -= 60;\n\n\tlet dim = {\n\t\tyMax: windowH + windowY,\n\t\tyMin: windowY\n\t};\n\n\tfor (let [groupname, grouplist] of _stickyfloats) {\n\t\tfor (let [attachment, groupset] of grouplist) {\n\t\t\tif (attachment === 'top') {\n\t\t\t\tupdateTopGroupset(groupset, dim);\n\t\t\t} else {\n\t\t\t\tupdateBottomGroupset(groupset, dim);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nfunction enable() {\n\tif (!_listening) {\n\t\t$(window).on('scroll.stickyfloat resize.stickyfloat', update);\n\t\t_listening = true;\n\t}\n}\n\nfunction disable() {\n\t$(window).off('.stickyfloat');\n\t_listening = false;\n}\n\nexport default class StickyFloat {\n\tconstructor (element, group, attachment) {\n\t\tvar $el;\n\n\t\tif (attachment !== 'top' && attachment !== 'bottom') {\n\t\t\tthrow Error('stickyfloat attachment must be either \"top\" or \"bottom\".');\n\t\t}\n\n\t\tthis.$el = $el = $(element);\n\t\tthis.group = group = (group || 'default');\n\t\tthis.attachment = attachment;\n\t\tthis.floating = false;\n\n\t\tthis.$el.data('stickyfloat', this);\n\n\t\tlet grouplist;\n\t\tif (_stickyfloats.has(group)) {\n\t\t\tgrouplist = _stickyfloats.get(group);\n\t\t} else {\n\t\t\tgrouplist = new Map([['top', []], ['bottom', []]]);\n\t\t\t_stickyfloats.set(group, grouplist);\n\t\t}\n\n\t\tlet groupset = grouplist.get(attachment);\n\n\t\tgroupset.push(this);\n\n\t\t// sort by y component\n\t\tif (attachment === 'top') {\n\t\t\tgroupset.sort((a, b) => a.top - b.top);\n\t\t} else {\n\t\t\tgroupset.sort((b, a) => a.top - b.top);\n\t\t}\n\n\t\tdeferUpdate();\n\t}\n\n\tget height () {\n\t\treturn this.$el.outerHeight();\n\t}\n\n\tget top () {\n\t\treturn (this.floating) ? this.$placeholder.offset().top : this.$el.offset().top;\n\t}\n\n\tget bottom () {\n\t\treturn this.height + this.top;\n\t}\n\n\tpeer (other) {\n\t\tthis.peer = other;\n\t\tother.peer = this;\n\t}\n\n\tremove () {\n\t\tlet group = _stickyfloats[this.group];\n\t\tgroup.splice(group.indexOf(this), 1);\n\t\tthis.$el.data('stickyfloat', undefined);\n\t}\n\n\tfloat () {\n\t\tvar $el = this.$el,\n\t\t\t$parent = this.$el.parent(),\n\t\t\tlastWidth,\n\t\t\tlastHeight,\n\t\t\tsyncAppearance;\n\n\t\tif (!this.floating) {\n\n\t\t\tlet attachment = this.attachment;\n\n\t\t\tlastWidth = $el.outerWidth();\n\t\t\tlastHeight = $el.outerHeight();\n\n\n\t\t\tlet $floated = $(`<div class=\"sf-float-${attachment}\" />`); //style=\"position: fixed; width: inherit\"/>`);\n\t\t\tlet $placeholder = $('<div class=\"sf-pl\" />').outerHeight(lastHeight);\n\n\n\t\t\t$placeholder.insertAfter($el);\n\t\t\t$el.remove();\n\t\t\t$floated.append($el);\n\t\t\t$parent.append($floated);\n\n\t\t\tthis.$floated = $floated;\n\t\t\tthis.$placeholder = $placeholder;\n\t\t\tthis.floating = true;\n\t\t}\n\t}\n\n\tsink () {\n\t\tif (this.floating) {\n\t\t\tlet $floated = this.$floated;\n\t\t\tlet $placeholder = this.$placeholder;\n\t\t\tlet $el = this.$el;\n\n\t\t\t$floated.remove();\n\t\t\t$el.remove();\n\t\t\t$el.insertAfter($placeholder);\n\t\t\t$placeholder.remove();\n\n\t\t\tthis.floating = false;\n\t\t}\n\t}\n\n\tupdate (offset) {\n\t\tif (this.floating) {\n\t\t\tif (this._lastOffset !== offset) {\n\t\t\t\tthis._lastOffset = offset;\n\n\t\t\t\tif (this.attachment === 'top') {\n\t\t\t\t\tthis.$floated.css({ top: offset + 'px' });\n\t\t\t\t} else {\n\t\t\t\t\tthis.$floated.css({ bottom: offset + 'px' });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.$floated.outerHeight();\n\n\t\t} else {\n\t\t\tthis._lastOffset = null;\n\t\t}\n\n\t\treturn 0;\n\t}\n}\n\nStickyFloat.enable = enable;\nStickyFloat.disable = disable;\n\n","import JQuerySelectors from './jquery-selectors';\nif (typeof $ !== 'undefined') {\n\t$.extend($.expr[':'], JQuerySelectors);\n}\n\nlet uniqId = (() => {\n\tlet i = 0;\n\treturn () => {\n\t\treturn 'cte-' + (i++).toString(16);\n\t};\n})();\n\n// pass template to compileTemplate, get back a prepared template\n// call prepared template and get back a template that's all set up with\n// an element.\n\nfunction isTruthy(x) {\n\treturn (typeof(x) === 'boolean' ?\n\t\tx : Boolean(x) && !(\n\t\t\tx.length === 0 ||\n\t\t\tx[0] === 'f' ||\n\t\t\tx[0] === 'F' ||\n\t\t\tx === '0')\n\t);\n}\n\nexport default function compileTemplate (template, options) {\n\tlet $template = $(template).not(':text');\n\n\tif ($template.length > 1) {\n\t\tthrow Error(`The template provided for \"${options.name}\" has more than one root element.`);\n\t}\n\t// Entry field templates need to have an element prepended\n\t// to hold the entry number.\n\tif (options.showPosition) {\n\t\tif (options.name === 'header') {\n\t\t\t$template.prepend(\n\t\t\t\t'<span class=\"ct-row-number ct-header-item ct-sortby-_row-numeric sort-desc\"><span class=\"ct-row-sort\"></span></span>'\n\t\t\t);\n\t\t} else if (options.name === 'entry') {\n\t\t\t$template.prepend('<span class=\"ct-row-number\"><span data-ct-bind=\"_row\">x</span></span>');\n\t\t}\n\t}\n\n\t// Parse/extract all \"bind\" elements from the template\n\tlet bindingExpr = /([<>]*)(\\w+)/;\n\tlet bindElements = $template.find(':ct2-bind');\n\n\tlet bindings = {};\n\tlet m2v = bindings.m2v = {};\n\tlet v2m = bindings.v2m = {};\n\tlet methods = bindings.methods = {};\n\n\t$(bindElements).each((i, e) => {\n\t\tlet $e = $(e);\n\t\tlet elementCtId;\n\n\t\t// Verify that the element being bound has an ID.\n\t\t// This ID will need to be altered for each instance of the template\n\t\t// that is constructed.\n\t\tif (typeof (elementCtId = $e.attr('data-ct-id')) === 'undefined') {\n\t\t\t$e.attr('data-ct-id', (elementCtId = uniqId()));\n\t\t}\n\n\t\t// determine which JQuery method to use to interact with the\n\t\t// target element's value.\n\t\tlet method;\n\t\tif ($e.is(':checkbox,:radio')) {\n\t\t\tmethod = (e, ...x) => e.prop('checked', ...x);\n\t\t} else if ($e.is(':input')) {\n\t\t\tmethod = (e, ...x) => e.val(...x);\n\t\t} else {\n\t\t\tmethod = (e, ...x) => e.text(...x);\n\t\t}\n\n\t\tmethods[elementCtId] = method;\n\n\t\t// Iterate over data-ct-bind values within the template and construct\n\t\t// an model-to-view and view-to-model mapping for data so it can be\n\t\t// moved either direction as needed.\n\t\tfor (let bind of $e.attr('data-ct-bind').match(/([<>=]?\\w+)/g)) {\n\t\t\tlet [bindString, direction, attribute] = bind.match(bindingExpr);\n\n\t\t\tdirection = direction || '=';\n\n\t\t\t// model to view\n\t\t\tif (direction === '=' || direction === '<') {\n\t\t\t\tm2v[attribute] = m2v[attribute] || [];\n\t\t\t\tm2v[attribute].push(elementCtId);\n\t\t\t}\n\n\t\t\t// view to model\n\t\t\tif (direction === '=' || direction === '>') {\n\t\t\t\tv2m[elementCtId] = v2m[elementCtId] || [];\n\t\t\t\tv2m[elementCtId].push(attribute);\n\t\t\t}\n\t\t}\n\t});\n\n\tlet create = (model) => new CTTemplateInstance ($template, bindings, model, options);\n\n\t// expose processed data for outside systems.\n\tcreate.template = template;\n\tcreate.bindings = bindings;\n\n\t// return a function when called, creates a new TemplateInstance.\n\treturn create;\n}\n\n\nclass CTTemplateInstance {\n\tconstructor ($template, bindings, model, options) {\n\t\tthis.$el = $template.clone();\n\n\t\tthis.bindings = bindings;\n\t\tthis.invalidation = options.invalidation;\n\t\tthis.modification = options.modification;\n\t\tthis.hasFocus = options.hasFocus;\n\t\tthis.entryHeight = options.entryHeight;\n\n\t\tthis.$el.on('change', (e) => {\n\n\t\t\t// apply change to model\n\t\t\tlet v2m = this.bindings.v2m;\n\t\t\tlet $target = $(e.target);\n\t\t\tlet ctId = $target.attr('data-ct-id');\n\t\t\tlet value = this.bindings.methods[ctId]($target);\n\t\t\tlet changes = {};\n\n\t\t\tif (v2m.hasOwnProperty(ctId)) {\n\t\t\t\t_.each(v2m[ctId], function (attrib) {\n\t\t\t\t\tchanges[attrib] = value;\n\t\t\t\t});\n\t\t\t\tthis.model.set(changes);\n\t\t\t}\n\t\t});\n\n\t\t// find auto-fill elements once and cache references to them.\n\t\tlet elementMap = new Map(); //{};\n\t\t_.each(_.pairs(this.bindings.m2v), ([attrib, ctIds]) => {\n\t\t\t_.each(ctIds, (ctId) => {\n\t\t\t\tif (!elementMap.hasOwnProperty(ctId)) {\n\t\t\t\t\telementMap.set(ctId, this.$el.find(`[data-ct-id=\"${ctId}\"]`));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis.elementMap = elementMap;\n\t}\n\n\tapplyValidationStates (changes) {\n\t\tvar bindings = this.bindings,\n\t\t\tm2v = bindings.m2v,\n\t\t\tinvalidations = this.invalidation(this.model.cid),\n\t\t\ti;\n\n\t\t// Prefer to use changes since we can optimize changes.\n\t\tif (changes) {\n\t\t\tfor (i = 0; i < changes.length; i++) {\n\t\t\t\tlet field = changes[i];\n\t\t\t\tlet message = invalidations && invalidations[changes[i]] || undefined;\n\n\t\t\t\tfor (let elementId of m2v[field]) {\n\t\t\t\t\tlet $element = this.elementMap.get(elementId);\n\n\t\t\t\t\t$element\n\t\t\t\t\t\t.attr('validation-msg', message)\n\t\t\t\t\t\t.toggleClass('ui-state-error', typeof message === 'string')\n\t\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn; // All done!\n\t\t}\n\n\t\t// Do it the dumb way, wipe all invalid states.\n\t\tfor (let [elementId, $element] of this.elementMap) {\n\t\t\t$element.removeClass('ui-state-error');\n\t\t}\n\n\t\t// Apply invalidation markers and messages.\n\t\tif (invalidations) {\n\t\t\t_.each(_.pairs(invalidations), ([field, errorMsg]) => {\n\t\t\t\tfor (let elementId of m2v[field]) {\n\t\t\t\t\tlet $element = this.elementMap.get(elementId);\n\n\t\t\t\t\tif ($element.is(':enabled')) {\n\t\t\t\t\t\t$element\n\t\t\t\t\t\t\t.attr('validation-msg', errorMsg)\n\t\t\t\t\t\t\t.addClass('ui-state-error');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tapplyModificationStates (changes) {\n\t\tvar bindings = this.bindings,\n\t\t\tm2v = bindings.m2v,\n\t\t\tmodifications = this.modification(this.model.cid),\n\t\t\ti;\n\n\t\tfor (let [elementId, $element] of this.elementMap) {\n\t\t\t$element.removeClass('ui-state-modified');\n\t\t}\n\n\t\tif (modifications) {\n\t\t\tfor (let field of modifications) {\n\t\t\t\tfor (let elementId of m2v[field]) {\n\t\t\t\t\tlet $element = this.elementMap.get(elementId);\n\t\t\t\t\t$element.addClass('ui-state-modified');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetModel (model, extra) {\n\t\tif (this.model) {\n\t\t\tthis.stopListening();\n\t\t}\n\n\t\tthis.model = model;\n\t\tthis.$el\n\t\t\t.attr('data-model-cid', model.cid)                 // Easily scan DOM for specific model CID\n\t\t\t.data('ct-template', this)                         // Allows us to find this object through the DOM\n\t\t\t.toggleClass('ct-focus', this.hasFocus(model.cid)) //\n\t\t\t.css('height', (this.entryHeight() - 1) + 'px')     // +1 so entries overlap by 1 pixel\n\t\t\t;\n\n\t\tthis.listenTo(model, 'change', (change) => {\n\t\t\tthis.autofill(null, extra);\n\t\t});\n\n\t\t_.defer(() => this.applyValidationStates());\n\t\tthis.applyModificationStates();\n\n\t\tthis.autofill(null, extra);\n\t}\n\n\tautofill (attrs, extra) {\n\n\t\t// model attributes list to autofill\n\t\tattrs = attrs || _.keys(this.bindings.m2v);\n\t\tlet data = _.extend(this.model.toJSON(), extra);\n\t\tlet m2v = this.bindings.m2v;\n\t\tlet methods = this.bindings.methods;\n\n\t\t_.each(attrs, (attr) => {\n\t\t\t_.each(m2v[attr], (name) => {\n\n\t\t\t\tlet method = methods[name];\n\t\t\t\tmethod(this.elementMap.get(name), data[attr]);\n\t\t\t});\n\t\t});\n\t}\n\n\tfocusField (fieldname) {\n\t\tlet fields = this.bindings.m2v[fieldname];\n\n\t\tfor (let field of fields) {\n\t\t\tlet $elem = this.elementMap.get(field);\n\t\t\tif ($elem && $elem.is(':visible')) {\n\t\t\t\t$elem.focus();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nObject.assign(CTTemplateInstance.prototype, Backbone.Events);\n"]}